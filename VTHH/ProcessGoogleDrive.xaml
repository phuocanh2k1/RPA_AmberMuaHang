<Activity mc:Ignorable="sap sap2010" x:Class="ProcessGoogleDrive" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:gadvd="clr-namespace:Google.Apis.Drive.v3.Data;assembly=Google.Apis.Drive.v3" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data.Common" xmlns:ue="clr-namespace:UiPath.Excel;assembly=UiPath.Excel.Activities" xmlns:ueab="clr-namespace:UiPath.Excel.Activities.Business;assembly=UiPath.Excel.Activities" xmlns:uga="clr-namespace:UiPath.GSuite.Activities;assembly=UiPath.GSuite.Activities" xmlns:ugad="clr-namespace:UiPath.GSuite.Activities.Drive;assembly=UiPath.GSuite.Activities" xmlns:ugdm="clr-namespace:UiPath.GSuite.Drive.Models;assembly=UiPath.GSuite" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_config" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property Name="in_FileNhapMa" Type="InArgument(x:String)" />
    <x:Property Name="in_FileToCheck" Type="InArgument(x:String)" />
  </x:Members>
  <sap2010:ExpressionActivityEditor.ExpressionActivityEditor>C#</sap2010:ExpressionActivityEditor.ExpressionActivityEditor>
  <sap:VirtualizedContainerService.HintSize>815.2,1239.2</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ActivityBuilder_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Text</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.GSuite.Drive.Models</x:String>
      <x:String>UiPath.Platform.ResourceHandling</x:String>
      <x:String>UiPath.GSuite.Activities.Drive</x:String>
      <x:String>UiPath.GSuite.Activities.Drive.Enums</x:String>
      <x:String>UiPath.Shared.Activities.Utils</x:String>
      <x:String>UiPath.GSuite.Activities.Drive.Filters</x:String>
      <x:String>Google.Apis.Drive.v3.Data</x:String>
      <x:String>Google.Apis.Requests</x:String>
      <x:String>UiPath.Shared.Activities.ConnectionService.Contracts</x:String>
      <x:String>UiPath.GSuite.Activities</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>UiPath.GSuite.Contracts</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>System.Activities.Runtime.Collections</x:String>
      <x:String>System.IO</x:String>
      <x:String>UiPath.Excel.Model</x:String>
      <x:String>UiPath.Excel.Activities.Business</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.DataTableUtilities</x:String>
      <x:String>System.Security</x:String>
      <x:String>UiPath.Mail</x:String>
      <x:String>UiPath.Mail.SMTP.Activities</x:String>
      <x:String>UiPath.Mail.Activities</x:String>
      <x:String>UiPath.GSuite.Activities.Sheets</x:String>
      <x:String>UiPath.GSuite.Activities.Sheets.Enums</x:String>
      <x:String>UiPath.GSuite</x:String>
      <x:String>UiPath.GSuite.Activities.Enums</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.CSharp</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>netstandard</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>UiPath.GSuite</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>UiPath.GSuite.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>Google.Apis.Drive.v3</AssemblyReference>
      <AssemblyReference>Google.Apis</AssemblyReference>
      <AssemblyReference>Google.Apis.Core</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Linq.Async</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.Watcher</AssemblyReference>
      <AssemblyReference>System.IO.Packaging</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.AccessControl</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.DriveInfo</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>Microsoft.Win32.Primitives</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>System.Data.SqlClient</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.ViewModels</AssemblyReference>
      <AssemblyReference>System.Runtime.InteropServices</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities.Design</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="ProcessGoogleDrive" sap:VirtualizedContainerService.HintSize="825.6,1174.4" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="folderMaHHVT" />
      <Variable x:TypeArguments="x:Boolean" Default="False" Name="isCodeMissing" />
      <Variable x:TypeArguments="x:String" Name="folderForBot" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="763.2,132" sap2010:WorkflowViewState.IdRef="MultipleAssign_2">
      <ui:MultipleAssign.AssignOperations>
        <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_2">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">
                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_4">
                  <CSharpReference.Result>
                    <OutArgument x:TypeArguments="Location(x:String)" />
                  </CSharpReference.Result>folderMaHHVT</CSharpReference>
              </OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">
                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_250" xml:space="preserve">"DanhSachHHVT "  + DateTime.Now. ToString("dd/MM/yyyy")</CSharpValue>
              </InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_3">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">
                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_37">folderForBot</CSharpReference>
              </OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">Folder bot chạy</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
        </scg:List>
      </ui:MultipleAssign.AssignOperations>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:MultipleAssign>
    <ugad:GoogleDriveApplicationScope ConnectionAccountName="{x:Null}" ConnectionId="{x:Null}" ContinueOnError="{x:Null}" Timeout="{x:Null}" Account="rpademoacc01@gmail.com" DisplayName="Use Google Drive" sap:VirtualizedContainerService.HintSize="763.2,890.4" sap2010:WorkflowViewState.IdRef="GoogleDriveApplicationScope_1" UseConnectionService="False" UserEmail="rpademoacc01@gmail.com">
      <ugad:GoogleDriveApplicationScope.Body>
        <ActivityAction x:TypeArguments="ugad:IGoogleDriveTarget">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="ugad:IGoogleDriveTarget" Name="GoogleDrive" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="729.6,748.8" sap2010:WorkflowViewState.IdRef="Sequence_3">
            <Sequence.Variables>
              <Variable x:TypeArguments="ugdm:GDriveRemoteItem" Name="driveFolder" />
              <Variable x:TypeArguments="ugdm:GDriveRemoteItem[]" Name="listFile" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Flowchart sap:VirtualizedContainerService.HintSize="667.2,636.8" sap2010:WorkflowViewState.IdRef="Flowchart_2">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  <av:Point x:Key="ShapeLocation">270,2.3999999999999986</av:Point>
                  <av:Size x:Key="ShapeSize">60,75.2</av:Size>
                  <x:Double x:Key="Width">634</x:Double>
                  <av:PointCollection x:Key="ConnectorLocation">300,77.6 300,107.6 290,107.6 290,116.4</av:PointCollection>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Flowchart.StartNode>
                <x:Reference>__ReferenceID3</x:Reference>
              </Flowchart.StartNode>
              <FlowSwitch x:TypeArguments="x:Int32" x:Name="__ReferenceID3" DisplayName="Kiểm tra stage" sap:VirtualizedContainerService.HintSize="82.4,87.2" sap2010:WorkflowViewState.IdRef="FlowSwitch`1_1">
                <FlowSwitch.Default>
                  <FlowStep x:Name="__ReferenceID0">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <av:Point x:Key="ShapeLocation">410,208.39999999999998</av:Point>
                        <av:Size x:Key="ShapeSize">200,83.2</av:Size>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Sequence DisplayName="Tạo mới folder và đẩy file lên drive" sap:VirtualizedContainerService.HintSize="200,83.2" sap2010:WorkflowViewState.IdRef="Sequence_8">
                      <Sequence.Variables>
                        <Variable x:TypeArguments="x:String" Name="file" />
                        <Variable x:TypeArguments="x:String" Name="folderForBotID" />
                        <Variable x:TypeArguments="gadvd:File[]" Name="isExist" />
                        <Variable x:TypeArguments="x:String" Name="folderMaHhvtID" />
                      </Sequence.Variables>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <uga:FindFiles ContinueOnError="{x:Null}" FirstResultId="{x:Null}" AuthScopesInvalid="False" DisplayName="Find Files and Folders" sap:VirtualizedContainerService.HintSize="510.4,81.6" sap2010:WorkflowViewState.IdRef="FindFiles_7" MaxResults="50" SupportsTeamDrives="False">
                        <uga:FindFiles.DriveTarget>
                          <InArgument x:TypeArguments="ugad:IGoogleDriveTarget">
                            <CSharpValue x:TypeArguments="ugad:IGoogleDriveTarget" sap2010:WorkflowViewState.IdRef="CSharpValue`1_354">GoogleDrive</CSharpValue>
                          </InArgument>
                        </uga:FindFiles.DriveTarget>
                        <uga:FindFiles.Result>
                          <OutArgument x:TypeArguments="gadvd:File[]">
                            <CSharpReference x:TypeArguments="gadvd:File[]" sap2010:WorkflowViewState.IdRef="CSharpReference`1_40">isExist</CSharpReference>
                          </OutArgument>
                        </uga:FindFiles.Result>
                        <uga:FindFiles.SearchExpression>
                          <InArgument x:TypeArguments="x:String">
                            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_276">string.Format("name = '{0}'", folderForBot)</CSharpValue>
                          </InArgument>
                        </uga:FindFiles.SearchExpression>
                      </uga:FindFiles>
                      <If sap:VirtualizedContainerService.HintSize="510.4,627.2" sap2010:WorkflowViewState.IdRef="If_8">
                        <If.Condition>
                          <InArgument x:TypeArguments="x:Boolean">
                            <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_228">isExist.Length &lt;= 0</CSharpValue>
                          </InArgument>
                        </If.Condition>
                        <If.Then>
                          <Sequence sap:VirtualizedContainerService.HintSize="376.8,272.8" sap2010:WorkflowViewState.IdRef="Sequence_36">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <uga:CreateFolder ContinueOnError="{x:Null}" FolderDescription="{x:Null}" AuthScopesInvalid="False" DisplayName="Create Folder" sap:VirtualizedContainerService.HintSize="333.6,183.2" sap2010:WorkflowViewState.IdRef="CreateFolder_5" ParentFriendlyName="Folder bot chạy" ParentId="root" ParentIdSelectionMode="EnterId" SupportsTeamDrives="False">
                              <uga:CreateFolder.DriveTarget>
                                <InArgument x:TypeArguments="ugad:IGoogleDriveTarget">
                                  <CSharpValue x:TypeArguments="ugad:IGoogleDriveTarget" sap2010:WorkflowViewState.IdRef="CSharpValue`1_355">GoogleDrive</CSharpValue>
                                </InArgument>
                              </uga:CreateFolder.DriveTarget>
                              <uga:CreateFolder.FolderName>
                                <InArgument x:TypeArguments="x:String">
                                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_263">folderForBot</CSharpValue>
                                </InArgument>
                              </uga:CreateFolder.FolderName>
                              <uga:CreateFolder.Result>
                                <OutArgument x:TypeArguments="x:String">
                                  <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_38">folderForBotID</CSharpReference>
                                </OutArgument>
                              </uga:CreateFolder.Result>
                            </uga:CreateFolder>
                          </Sequence>
                        </If.Then>
                        <If.Else>
                          <Sequence sap:VirtualizedContainerService.HintSize="476.8,171.2" sap2010:WorkflowViewState.IdRef="Sequence_37">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <Assign sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_9">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">
                                  <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_39">folderForBotID</CSharpReference>
                                </OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">
                                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_231">isExist[0].Id</CSharpValue>
                                </InArgument>
                              </Assign.Value>
                            </Assign>
                          </Sequence>
                        </If.Else>
                      </If>
                      <uga:FindFiles ContinueOnError="{x:Null}" FirstResultId="{x:Null}" AuthScopesInvalid="False" DisplayName="Find Files and Folders" sap:VirtualizedContainerService.HintSize="510.4,81.6" sap2010:WorkflowViewState.IdRef="FindFiles_6" MaxResults="50" SupportsTeamDrives="False">
                        <uga:FindFiles.DriveTarget>
                          <InArgument x:TypeArguments="ugad:IGoogleDriveTarget">
                            <CSharpValue x:TypeArguments="ugad:IGoogleDriveTarget" sap2010:WorkflowViewState.IdRef="CSharpValue`1_356">GoogleDrive</CSharpValue>
                          </InArgument>
                        </uga:FindFiles.DriveTarget>
                        <uga:FindFiles.Result>
                          <OutArgument x:TypeArguments="gadvd:File[]">
                            <CSharpReference x:TypeArguments="gadvd:File[]" sap2010:WorkflowViewState.IdRef="CSharpReference`1_34">isExist</CSharpReference>
                          </OutArgument>
                        </uga:FindFiles.Result>
                        <uga:FindFiles.SearchExpression>
                          <InArgument x:TypeArguments="x:String">
                            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_211">string.Format("name = '{0}'", folderMaHHVT)</CSharpValue>
                          </InArgument>
                        </uga:FindFiles.SearchExpression>
                      </uga:FindFiles>
                      <If sap:VirtualizedContainerService.HintSize="510.4,1185.6" sap2010:WorkflowViewState.IdRef="If_7">
                        <If.Condition>
                          <InArgument x:TypeArguments="x:Boolean">
                            <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_218">isExist.Length &lt;= 0</CSharpValue>
                          </InArgument>
                        </If.Condition>
                        <If.Then>
                          <Sequence sap:VirtualizedContainerService.HintSize="376.8,552" sap2010:WorkflowViewState.IdRef="Sequence_34">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <uga:CreateFolder ContinueOnError="{x:Null}" FolderDescription="{x:Null}" AuthScopesInvalid="False" DisplayName="Create Folder" sap:VirtualizedContainerService.HintSize="333.6,183.2" sap2010:WorkflowViewState.IdRef="CreateFolder_2" ParentFriendlyName="Folder bot chạy" ParentIdSelectionMode="EnterId" SupportsTeamDrives="False">
                              <uga:CreateFolder.DriveTarget>
                                <InArgument x:TypeArguments="ugad:IGoogleDriveTarget">
                                  <CSharpValue x:TypeArguments="ugad:IGoogleDriveTarget" sap2010:WorkflowViewState.IdRef="CSharpValue`1_357">GoogleDrive</CSharpValue>
                                </InArgument>
                              </uga:CreateFolder.DriveTarget>
                              <uga:CreateFolder.FolderName>
                                <InArgument x:TypeArguments="x:String">
                                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_106">
                                    <CSharpValue.Result>
                                      <OutArgument x:TypeArguments="x:String" />
                                    </CSharpValue.Result>folderMaHHVT</CSharpValue>
                                </InArgument>
                              </uga:CreateFolder.FolderName>
                              <uga:CreateFolder.ParentId>
                                <InArgument x:TypeArguments="x:String">
                                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_206">folderForBotID</CSharpValue>
                                </InArgument>
                              </uga:CreateFolder.ParentId>
                              <uga:CreateFolder.Result>
                                <OutArgument x:TypeArguments="x:String">
                                  <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_35">folderMaHhvtID</CSharpReference>
                                </OutArgument>
                              </uga:CreateFolder.Result>
                            </uga:CreateFolder>
                            <uga:UploadFile ContinueOnError="{x:Null}" ParentFolderName="{x:Null}" AuthScopesInvalid="False" Convert="False" DisplayName="Upload File" sap:VirtualizedContainerService.HintSize="333.6,239.2" sap2010:WorkflowViewState.IdRef="UploadFile_2" LocalFilePath="Output\Danh muc VTHH co Ma goi y.xlsx" ParentIdSelectionMode="EnterId" SupportsTeamDrives="False" UpdateExisting="True">
                              <uga:UploadFile.DriveTarget>
                                <InArgument x:TypeArguments="ugad:IGoogleDriveTarget">
                                  <CSharpValue x:TypeArguments="ugad:IGoogleDriveTarget" sap2010:WorkflowViewState.IdRef="CSharpValue`1_358">GoogleDrive</CSharpValue>
                                </InArgument>
                              </uga:UploadFile.DriveTarget>
                              <uga:UploadFile.ParentId>
                                <InArgument x:TypeArguments="x:String">
                                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_244">folderMaHhvtID</CSharpValue>
                                </InArgument>
                              </uga:UploadFile.ParentId>
                              <uga:UploadFile.Result>
                                <OutArgument x:TypeArguments="x:String">
                                  <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_7">
                                    <CSharpReference.Result>
                                      <OutArgument x:TypeArguments="Location(x:String)" />
                                    </CSharpReference.Result>file</CSharpReference>
                                </OutArgument>
                              </uga:UploadFile.Result>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </uga:UploadFile>
                          </Sequence>
                        </If.Then>
                        <If.Else>
                          <Sequence sap:VirtualizedContainerService.HintSize="476.8,450.4" sap2010:WorkflowViewState.IdRef="Sequence_35">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <Assign sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_10">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">
                                  <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_41">folderMaHhvtID</CSharpReference>
                                </OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">
                                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_238">isExist[0].Id</CSharpValue>
                                </InArgument>
                              </Assign.Value>
                            </Assign>
                            <uga:UploadFile ContinueOnError="{x:Null}" ParentFolderName="{x:Null}" AuthScopesInvalid="False" Convert="False" DisplayName="Upload File" sap:VirtualizedContainerService.HintSize="433.6,239.2" sap2010:WorkflowViewState.IdRef="UploadFile_3" LocalFilePath="Output\Danh muc VTHH co Ma goi y.xlsx" ParentIdSelectionMode="EnterId" SupportsTeamDrives="False" UpdateExisting="True">
                              <uga:UploadFile.DriveTarget>
                                <InArgument x:TypeArguments="ugad:IGoogleDriveTarget">
                                  <CSharpValue x:TypeArguments="ugad:IGoogleDriveTarget" sap2010:WorkflowViewState.IdRef="CSharpValue`1_359">GoogleDrive</CSharpValue>
                                </InArgument>
                              </uga:UploadFile.DriveTarget>
                              <uga:UploadFile.ParentId>
                                <InArgument x:TypeArguments="x:String">
                                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_327">folderMaHhvtID</CSharpValue>
                                </InArgument>
                              </uga:UploadFile.ParentId>
                              <uga:UploadFile.Result>
                                <OutArgument x:TypeArguments="x:String">
                                  <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_45">
                                    <CSharpReference.Result>
                                      <OutArgument x:TypeArguments="Location(x:String)" />
                                    </CSharpReference.Result>file</CSharpReference>
                                </OutArgument>
                              </uga:UploadFile.Result>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </uga:UploadFile>
                          </Sequence>
                        </If.Else>
                      </If>
                      <ui:WriteCell Cell="B8" DisplayName="Write Cell Workbook" sap:VirtualizedContainerService.HintSize="510.4,116" sap2010:WorkflowViewState.IdRef="WriteCell_1" SheetName="Config" WorkbookPath="config\config.xlsx">
                        <ui:WriteCell.Text>
                          <InArgument x:TypeArguments="x:String">
                            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_49">
                              <CSharpValue.Result>
                                <OutArgument x:TypeArguments="x:String" />
                              </CSharpValue.Result>DateTime.Now.ToString()</CSharpValue>
                          </InArgument>
                        </ui:WriteCell.Text>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:WriteCell>
                      <ui:WriteCell Cell="B9" DisplayName="Write Cell Workbook" sap:VirtualizedContainerService.HintSize="510.4,116" sap2010:WorkflowViewState.IdRef="WriteCell_3" SheetName="Config" WorkbookPath="config\config.xlsx">
                        <ui:WriteCell.Text>
                          <InArgument x:TypeArguments="x:String">
                            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_35">
                              <CSharpValue.Result>
                                <OutArgument x:TypeArguments="x:String" />
                              </CSharpValue.Result>folderMaHHVT</CSharpValue>
                          </InArgument>
                        </ui:WriteCell.Text>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:WriteCell>
                      <ui:WriteCell Cell="B7" DisplayName="Write Cell Workbook" sap:VirtualizedContainerService.HintSize="510.4,116" sap2010:WorkflowViewState.IdRef="WriteCell_2" SheetName="Config" Text="2" WorkbookPath="config\config.xlsx">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:WriteCell>
                    </Sequence>
                  </FlowStep>
                </FlowSwitch.Default>
                <FlowSwitch.Expression>
                  <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_8">
                    <CSharpValue.Result>
                      <OutArgument x:TypeArguments="x:Int32" />
                    </CSharpValue.Result>Convert.ToInt16(in_config["stage"])</CSharpValue>
                </FlowSwitch.Expression>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <av:Point x:Key="ShapeLocation">249.2,116.4</av:Point>
                    <av:Size x:Key="ShapeSize">82.4,87.2</av:Size>
                    <av:PointCollection x:Key="Default">330.79999999999995,181.8 360.79999999999995,181.8 360.79999999999995,249.99999999999997 410,249.99999999999997</av:PointCollection>
                    <x:String x:Key="DefaultCaseDisplayName">1</x:String>
                    <av:PointCollection x:Key="2Connector">269.8,203.60000000000002 269.8,230 200,230</av:PointCollection>
                    <av:PointCollection x:Key="3Connector">311,203.60000000000002 311,233.60000000000002 290,233.60000000000002 290,338.4</av:PointCollection>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <FlowStep x:Key="2" x:Name="__ReferenceID1">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <av:Point x:Key="ShapeLocation">0,188.4</av:Point>
                      <av:Size x:Key="ShapeSize">200,83.2</av:Size>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Sequence DisplayName="Kiểm tra file đã update hay chưa" sap:VirtualizedContainerService.HintSize="200,83.2" sap2010:WorkflowViewState.IdRef="Sequence_9">
                    <Sequence.Variables>
                      <Variable x:TypeArguments="gadvd:File[]" Name="folderList" />
                      <Variable x:TypeArguments="gadvd:File[]" Name="fileList" />
                      <Variable x:TypeArguments="gadvd:File" Name="filetoCheck" />
                      <Variable x:TypeArguments="x:Int32" Default="0" Name="count" />
                      <Variable x:TypeArguments="sd:DataTable" Name="dataTable" />
                      <Variable x:TypeArguments="x:String" Name="message" />
                    </Sequence.Variables>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign sap:VirtualizedContainerService.HintSize="856,81.6" sap2010:WorkflowViewState.IdRef="Assign_5">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Int32">
                          <CSharpReference x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpReference`1_20">
                            <CSharpReference.Result>
                              <OutArgument x:TypeArguments="Location(x:Int32)" />
                            </CSharpReference.Result>count</CSharpReference>
                        </OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Int32">0</InArgument>
                      </Assign.Value>
                    </Assign>
                    <uga:FindFiles ContinueOnError="{x:Null}" FirstResultId="{x:Null}" AuthScopesInvalid="False" DisplayName="Find Files and Folders" sap:VirtualizedContainerService.HintSize="856,81.6" sap2010:WorkflowViewState.IdRef="FindFiles_1" MaxResults="50" SupportsTeamDrives="False">
                      <uga:FindFiles.DriveTarget>
                        <InArgument x:TypeArguments="ugad:IGoogleDriveTarget">
                          <CSharpValue x:TypeArguments="ugad:IGoogleDriveTarget" sap2010:WorkflowViewState.IdRef="CSharpValue`1_302">GoogleDrive</CSharpValue>
                        </InArgument>
                      </uga:FindFiles.DriveTarget>
                      <uga:FindFiles.Result>
                        <OutArgument x:TypeArguments="gadvd:File[]">
                          <CSharpReference x:TypeArguments="gadvd:File[]" sap2010:WorkflowViewState.IdRef="CSharpReference`1_12">
                            <CSharpReference.Result>
                              <OutArgument x:TypeArguments="Location(gadvd:File[])" />
                            </CSharpReference.Result>folderList</CSharpReference>
                        </OutArgument>
                      </uga:FindFiles.Result>
                      <uga:FindFiles.SearchExpression>
                        <InArgument x:TypeArguments="x:String">
                          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_127">
                            <CSharpValue.Result>
                              <OutArgument x:TypeArguments="x:String" />
                            </CSharpValue.Result>string.Format("name = '{0}'",in_config["uploadFolderName"])</CSharpValue>
                        </InArgument>
                      </uga:FindFiles.SearchExpression>
                    </uga:FindFiles>
                    <uga:FindFiles ContinueOnError="{x:Null}" FirstResultId="{x:Null}" AuthScopesInvalid="False" DisplayName="Find Files and Folders" sap:VirtualizedContainerService.HintSize="856,81.6" sap2010:WorkflowViewState.IdRef="FindFiles_2" MaxResults="50" SupportsTeamDrives="False">
                      <uga:FindFiles.DriveTarget>
                        <InArgument x:TypeArguments="ugad:IGoogleDriveTarget">
                          <CSharpValue x:TypeArguments="ugad:IGoogleDriveTarget" sap2010:WorkflowViewState.IdRef="CSharpValue`1_303">GoogleDrive</CSharpValue>
                        </InArgument>
                      </uga:FindFiles.DriveTarget>
                      <uga:FindFiles.Result>
                        <OutArgument x:TypeArguments="gadvd:File[]">
                          <CSharpReference x:TypeArguments="gadvd:File[]" sap2010:WorkflowViewState.IdRef="CSharpReference`1_13">
                            <CSharpReference.Result>
                              <OutArgument x:TypeArguments="Location(gadvd:File[])" />
                            </CSharpReference.Result>fileList</CSharpReference>
                        </OutArgument>
                      </uga:FindFiles.Result>
                      <uga:FindFiles.SearchExpression>
                        <InArgument x:TypeArguments="x:String">
                          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_39">
                            <CSharpValue.Result>
                              <OutArgument x:TypeArguments="x:String" />
                            </CSharpValue.Result>string.Format("parents in '{0}'", folderList[0].Id)</CSharpValue>
                        </InArgument>
                      </uga:FindFiles.SearchExpression>
                    </uga:FindFiles>
                    <Assign sap:VirtualizedContainerService.HintSize="856,81.6" sap2010:WorkflowViewState.IdRef="Assign_3">
                      <Assign.To>
                        <OutArgument x:TypeArguments="gadvd:File">
                          <CSharpReference x:TypeArguments="gadvd:File" sap2010:WorkflowViewState.IdRef="CSharpReference`1_14">
                            <CSharpReference.Result>
                              <OutArgument x:TypeArguments="Location(gadvd:File)" />
                            </CSharpReference.Result>filetoCheck</CSharpReference>
                        </OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="gadvd:File">
                          <CSharpValue x:TypeArguments="gadvd:File" sap2010:WorkflowViewState.IdRef="CSharpValue`1_40">
                            <CSharpValue.Result>
                              <OutArgument x:TypeArguments="gadvd:File" />
                            </CSharpValue.Result>fileList[0]</CSharpValue>
                        </InArgument>
                      </Assign.Value>
                    </Assign>
                    <uga:DownloadFile ContinueOnError="{x:Null}" FileFriendlyName="{x:Null}" AuthScopesInvalid="False" DisplayName="Download File" FileIdSelectionMode="EnterId" sap:VirtualizedContainerService.HintSize="856,150.4" sap2010:WorkflowViewState.IdRef="DownloadFile_2" SupportsTeamDrives="False">
                      <uga:DownloadFile.DriveTarget>
                        <InArgument x:TypeArguments="ugad:IGoogleDriveTarget">
                          <CSharpValue x:TypeArguments="ugad:IGoogleDriveTarget" sap2010:WorkflowViewState.IdRef="CSharpValue`1_304">GoogleDrive</CSharpValue>
                        </InArgument>
                      </uga:DownloadFile.DriveTarget>
                      <uga:DownloadFile.FileId>
                        <InArgument x:TypeArguments="x:String">
                          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_65">
                            <CSharpValue.Result>
                              <OutArgument x:TypeArguments="x:String" />
                            </CSharpValue.Result>fileList[0].Id</CSharpValue>
                        </InArgument>
                      </uga:DownloadFile.FileId>
                      <uga:DownloadFile.LocalPath>
                        <InArgument x:TypeArguments="x:String">
                          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_124">
                            <CSharpValue.Result>
                              <OutArgument x:TypeArguments="x:String" />
                            </CSharpValue.Result>in_FileToCheck</CSharpValue>
                        </InArgument>
                      </uga:DownloadFile.LocalPath>
                    </uga:DownloadFile>
                    <ueab:ExcelProcessScopeX DisplayAlerts="{x:Null}" ExistingProcessAction="{x:Null}" LaunchMethod="{x:Null}" LaunchTimeout="{x:Null}" MacroSettings="{x:Null}" DisplayName="Excel Process Scope" FileConflictResolution="CloseWithoutSaving" sap:VirtualizedContainerService.HintSize="856,1706.4" sap2010:WorkflowViewState.IdRef="ExcelProcessScopeX_1" ProcessMode="AlwaysCreateNew" ShowExcelWindow="False">
                      <ueab:ExcelProcessScopeX.Body>
                        <ActivityAction x:TypeArguments="ui:IExcelProcess">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="ui:IExcelProcess" Name="ExcelProcessScopeTag" />
                          </ActivityAction.Argument>
                          <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="822.4,1620" sap2010:WorkflowViewState.IdRef="Sequence_15">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ueab:ExcelApplicationCard Password="{x:Null}" ReadFormatting="{x:Null}" DisplayName="Use Excel File" sap:VirtualizedContainerService.HintSize="760,1508" sap2010:WorkflowViewState.IdRef="ExcelApplicationCard_1" ResizeWindow="None">
                              <ueab:ExcelApplicationCard.Body>
                                <ActivityAction x:TypeArguments="ue:IWorkbookQuickHandle">
                                  <ActivityAction.Argument>
                                    <DelegateInArgument x:TypeArguments="ue:IWorkbookQuickHandle" Name="Excel" />
                                  </ActivityAction.Argument>
                                  <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="726.4,1238.4" sap2010:WorkflowViewState.IdRef="Sequence_14">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:ExcelReadRange AddHeaders="True" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="664,60" sap2010:WorkflowViewState.IdRef="ExcelReadRange_1" Range="A2" SheetName="Danh mục cập nhật">
                                      <ui:ExcelReadRange.DataTable>
                                        <OutArgument x:TypeArguments="sd:DataTable">
                                          <CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_24">
                                            <CSharpReference.Result>
                                              <OutArgument x:TypeArguments="Location(sd:DataTable)" />
                                            </CSharpReference.Result>dataTable</CSharpReference>
                                        </OutArgument>
                                      </ui:ExcelReadRange.DataTable>
                                    </ui:ExcelReadRange>
                                    <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DisplayName="For Each Row in Data Table" sap:VirtualizedContainerService.HintSize="664,1026.4" sap2010:WorkflowViewState.IdRef="ForEachRow_1">
                                      <ui:ForEachRow.Body>
                                        <ActivityAction x:TypeArguments="sd:DataRow">
                                          <ActivityAction.Argument>
                                            <DelegateInArgument x:TypeArguments="sd:DataRow" Name="CurrentRow" />
                                          </ActivityAction.Argument>
                                          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="630.4,838.4" sap2010:WorkflowViewState.IdRef="Sequence_18">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <If sap:VirtualizedContainerService.HintSize="587.2,748.8" sap2010:WorkflowViewState.IdRef="If_4">
                                              <If.Condition>
                                                <InArgument x:TypeArguments="x:Boolean">
                                                  <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_85">
                                                    <CSharpValue.Result>
                                                      <OutArgument x:TypeArguments="x:Boolean" />
                                                    </CSharpValue.Result>!string.IsNullOrEmpty(CurrentRow["Tên hàng (*)"].ToString())</CSharpValue>
                                                </InArgument>
                                              </If.Condition>
                                              <If.Then>
                                                <Sequence sap:VirtualizedContainerService.HintSize="553.6,565.6" sap2010:WorkflowViewState.IdRef="Sequence_19">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <If sap:VirtualizedContainerService.HintSize="510.4,476" sap2010:WorkflowViewState.IdRef="If_3">
                                                    <If.Condition>
                                                      <InArgument x:TypeArguments="x:Boolean">
                                                        <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_77">
                                                          <CSharpValue.Result>
                                                            <OutArgument x:TypeArguments="x:Boolean" />
                                                          </CSharpValue.Result>string.IsNullOrEmpty(CurrentRow["Mã hàng (*)"].ToString())</CSharpValue>
                                                      </InArgument>
                                                    </If.Condition>
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                    <If.Then>
                                                      <Sequence sap:VirtualizedContainerService.HintSize="476.8,292.8" sap2010:WorkflowViewState.IdRef="Sequence_16">
                                                        <sap:WorkflowViewStateService.ViewState>
                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                          </scg:Dictionary>
                                                        </sap:WorkflowViewStateService.ViewState>
                                                        <Assign sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_4">
                                                          <Assign.To>
                                                            <OutArgument x:TypeArguments="x:Boolean">
                                                              <CSharpReference x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpReference`1_22">
                                                                <CSharpReference.Result>
                                                                  <OutArgument x:TypeArguments="Location(x:Boolean)" />
                                                                </CSharpReference.Result>isCodeMissing</CSharpReference>
                                                            </OutArgument>
                                                          </Assign.To>
                                                          <Assign.Value>
                                                            <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                                          </Assign.Value>
                                                        </Assign>
                                                        <Assign sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_6">
                                                          <Assign.To>
                                                            <OutArgument x:TypeArguments="x:Int32">
                                                              <CSharpReference x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpReference`1_21">
                                                                <CSharpReference.Result>
                                                                  <OutArgument x:TypeArguments="Location(x:Int32)" />
                                                                </CSharpReference.Result>count</CSharpReference>
                                                            </OutArgument>
                                                          </Assign.To>
                                                          <Assign.Value>
                                                            <InArgument x:TypeArguments="x:Int32">
                                                              <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_81">
                                                                <CSharpValue.Result>
                                                                  <OutArgument x:TypeArguments="x:Int32" />
                                                                </CSharpValue.Result>count + 1</CSharpValue>
                                                            </InArgument>
                                                          </Assign.Value>
                                                        </Assign>
                                                      </Sequence>
                                                    </If.Then>
                                                    <If.Else>
                                                      <Sequence sap:VirtualizedContainerService.HintSize="300,82.4" sap2010:WorkflowViewState.IdRef="Sequence_17">
                                                        <sap:WorkflowViewStateService.ViewState>
                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                          </scg:Dictionary>
                                                        </sap:WorkflowViewStateService.ViewState>
                                                      </Sequence>
                                                    </If.Else>
                                                  </If>
                                                </Sequence>
                                              </If.Then>
                                              <If.Else>
                                                <Sequence sap2010:WorkflowViewState.IdRef="Sequence_20" />
                                              </If.Else>
                                            </If>
                                          </Sequence>
                                        </ActivityAction>
                                      </ui:ForEachRow.Body>
                                      <ui:ForEachRow.DataTable>
                                        <InArgument x:TypeArguments="sd:DataTable">
                                          <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_71">
                                            <CSharpValue.Result>
                                              <OutArgument x:TypeArguments="sd:DataTable" />
                                            </CSharpValue.Result>dataTable</CSharpValue>
                                        </InArgument>
                                      </ui:ForEachRow.DataTable>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ui:ForEachRow>
                                  </Sequence>
                                </ActivityAction>
                              </ueab:ExcelApplicationCard.Body>
                              <ueab:ExcelApplicationCard.WorkbookPath>
                                <InArgument x:TypeArguments="x:String">
                                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_126">
                                    <CSharpValue.Result>
                                      <OutArgument x:TypeArguments="x:String" />
                                    </CSharpValue.Result>in_FileToCheck</CSharpValue>
                                </InArgument>
                              </ueab:ExcelApplicationCard.WorkbookPath>
                            </ueab:ExcelApplicationCard>
                          </Sequence>
                        </ActivityAction>
                      </ueab:ExcelProcessScopeX.Body>
                    </ueab:ExcelProcessScopeX>
                    <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="856,52.8" sap2010:WorkflowViewState.IdRef="CommentOut_3">
                      <ui:CommentOut.Body>
                        <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="472.8,533.6" sap2010:WorkflowViewState.IdRef="Sequence_13">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <If sap:VirtualizedContainerService.HintSize="410.4,421.6" sap2010:WorkflowViewState.IdRef="If_2">
                            <If.Condition>
                              <InArgument x:TypeArguments="x:Boolean">
                                <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_45">filetoCheck.ModifiedTime &gt;DateTime.Parse(in_config["dayUpdate"].ToString())</CSharpValue>
                              </InArgument>
                            </If.Condition>
                            <If.Then>
                              <Sequence sap:VirtualizedContainerService.HintSize="376.8,238.4" sap2010:WorkflowViewState.IdRef="Sequence_11">
                                <Sequence.Variables>
                                  <Variable x:TypeArguments="ugdm:GDriveLocalItem" Name="downloadedFile" />
                                </Sequence.Variables>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <uga:DownloadFile ContinueOnError="{x:Null}" FileFriendlyName="{x:Null}" AuthScopesInvalid="False" DisplayName="Download File" FileIdSelectionMode="EnterId" sap:VirtualizedContainerService.HintSize="333.6,148.8" sap2010:WorkflowViewState.IdRef="DownloadFile_1" LocalPath="Download/abc.xlsx" SupportsTeamDrives="False">
                                  <uga:DownloadFile.DriveTarget>
                                    <InArgument x:TypeArguments="ugad:IGoogleDriveTarget">
                                      <CSharpValue x:TypeArguments="ugad:IGoogleDriveTarget" sap2010:WorkflowViewState.IdRef="CSharpValue`1_67">GoogleDrive</CSharpValue>
                                    </InArgument>
                                  </uga:DownloadFile.DriveTarget>
                                  <uga:DownloadFile.FileId>
                                    <InArgument x:TypeArguments="x:String">
                                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_54">fileList[0].Id</CSharpValue>
                                    </InArgument>
                                  </uga:DownloadFile.FileId>
                                </uga:DownloadFile>
                              </Sequence>
                            </If.Then>
                            <If.Else>
                              <Sequence sap:VirtualizedContainerService.HintSize="300,82.4" sap2010:WorkflowViewState.IdRef="Sequence_12">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </Sequence>
                            </If.Else>
                          </If>
                        </Sequence>
                      </ui:CommentOut.Body>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:CommentOut>
                    <If sap:VirtualizedContainerService.HintSize="856,1092" sap2010:WorkflowViewState.IdRef="If_5">
                      <If.Condition>
                        <InArgument x:TypeArguments="x:Boolean">
                          <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_96">
                            <CSharpValue.Result>
                              <OutArgument x:TypeArguments="x:Boolean" />
                            </CSharpValue.Result>isCodeMissing</CSharpValue>
                        </InArgument>
                      </If.Condition>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <If.Then>
                        <Sequence sap:VirtualizedContainerService.HintSize="476.8,908.8" sap2010:WorkflowViewState.IdRef="Sequence_21">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Assign sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_11">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">
                                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_42">
                                  <CSharpReference.Result>
                                    <OutArgument x:TypeArguments="Location(x:String)" />
                                  </CSharpReference.Result>message</CSharpReference>
                              </OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">
                                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_284">
                                  <CSharpValue.Result>
                                    <OutArgument x:TypeArguments="x:String" />
                                  </CSharpValue.Result>DateTime.Now.ToString() + "- Số mã còn thiếu: " + count + "/" + dataTable.RowCount()</CSharpValue>
                              </InArgument>
                            </Assign.Value>
                          </Assign>
                          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="433.6,142.4" sap2010:WorkflowViewState.IdRef="LogMessage_4">
                            <ui:LogMessage.Level>
                              <InArgument x:TypeArguments="ui:LogLevel">
                                <CSharpValue x:TypeArguments="ui:LogLevel" sap2010:WorkflowViewState.IdRef="CSharpValue`1_82">
                                  <CSharpValue.Result>
                                    <OutArgument x:TypeArguments="ui:LogLevel" />
                                  </CSharpValue.Result>UiPath.Core.Activities.LogLevel.Info</CSharpValue>
                              </InArgument>
                            </ui:LogMessage.Level>
                            <ui:LogMessage.Message>
                              <InArgument x:TypeArguments="x:Object">
                                <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_83">
                                  <CSharpValue.Result>
                                    <OutArgument x:TypeArguments="x:Object" />
                                  </CSharpValue.Result>"Số mã còn thiếu: " + count</CSharpValue>
                              </InArgument>
                            </ui:LogMessage.Message>
                          </ui:LogMessage>
                          <ui:SendMail Bcc="{x:Null}" Cc="{x:Null}" ContinueOnError="{x:Null}" From="{x:Null}" MailMessage="{x:Null}" Name="{x:Null}" ReplyTo="{x:Null}" Result="{x:Null}" SecurePassword="{x:Null}" TimeoutMS="{x:Null}" UseOAuth="{x:Null}" DisplayName="Send SMTP Mail Message" Email="quanghoangnhat01@gmail.com" EnableSSL="True" sap:VirtualizedContainerService.HintSize="433.6,146.4" sap2010:WorkflowViewState.IdRef="SendMail_1" IgnoreCRL="False" IsBodyHtml="False" Password="eryhaosialfqcxfo" Port="465" SecureConnection="Auto" Server="smtp.gmail.com" Subject="RPA_Amber">
                            <ui:SendMail.Body>
                              <InArgument x:TypeArguments="x:String">
                                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_199">
                                  <CSharpValue.Result>
                                    <OutArgument x:TypeArguments="x:String" />
                                  </CSharpValue.Result>message</CSharpValue>
                              </InArgument>
                            </ui:SendMail.Body>
                            <ui:SendMail.Files>
                              <scg:List x:TypeArguments="InArgument(x:String)" Capacity="0" />
                            </ui:SendMail.Files>
                            <ui:SendMail.To>
                              <InArgument x:TypeArguments="x:String">
                                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_164">
                                  <CSharpValue.Result>
                                    <OutArgument x:TypeArguments="x:String" />
                                  </CSharpValue.Result>in_config["mailPhuTrach"].ToString()</CSharpValue>
                              </InArgument>
                            </ui:SendMail.To>
                          </ui:SendMail>
                          <ui:SendMail Bcc="{x:Null}" Cc="{x:Null}" ContinueOnError="{x:Null}" From="{x:Null}" MailMessage="{x:Null}" Name="{x:Null}" ReplyTo="{x:Null}" Result="{x:Null}" SecurePassword="{x:Null}" TimeoutMS="{x:Null}" UseOAuth="{x:Null}" DisplayName="Send SMTP Mail Message" Email="quanghoangnhat01@gmail.com" EnableSSL="True" sap:VirtualizedContainerService.HintSize="433.6,146.4" sap2010:WorkflowViewState.IdRef="SendMail_2" IgnoreCRL="False" IsBodyHtml="False" Password="eryhaosialfqcxfo" Port="465" SecureConnection="Auto" Server="smtp.gmail.com" Subject="RPA_Amber">
                            <ui:SendMail.Body>
                              <InArgument x:TypeArguments="x:String">
                                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_200">
                                  <CSharpValue.Result>
                                    <OutArgument x:TypeArguments="x:String" />
                                  </CSharpValue.Result>message</CSharpValue>
                              </InArgument>
                            </ui:SendMail.Body>
                            <ui:SendMail.Files>
                              <scg:List x:TypeArguments="InArgument(x:String)" Capacity="0" />
                            </ui:SendMail.Files>
                            <ui:SendMail.To>
                              <InArgument x:TypeArguments="x:String">
                                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_280">in_config["mailAmber"].ToString()</CSharpValue>
                              </InArgument>
                            </ui:SendMail.To>
                          </ui:SendMail>
                          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="433.6,142.4" sap2010:WorkflowViewState.IdRef="LogMessage_5">
                            <ui:LogMessage.Level>
                              <InArgument x:TypeArguments="ui:LogLevel">
                                <CSharpValue x:TypeArguments="ui:LogLevel" sap2010:WorkflowViewState.IdRef="CSharpValue`1_133">
                                  <CSharpValue.Result>
                                    <OutArgument x:TypeArguments="ui:LogLevel" />
                                  </CSharpValue.Result>UiPath.Core.Activities.LogLevel.Error</CSharpValue>
                              </InArgument>
                            </ui:LogMessage.Level>
                            <ui:LogMessage.Message>
                              <InArgument x:TypeArguments="x:Object">
                                <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_134">
                                  <CSharpValue.Result>
                                    <OutArgument x:TypeArguments="x:Object" />
                                  </CSharpValue.Result>"check drive done"</CSharpValue>
                              </InArgument>
                            </ui:LogMessage.Message>
                          </ui:LogMessage>
                        </Sequence>
                      </If.Then>
                      <If.Else>
                        <Sequence sap:VirtualizedContainerService.HintSize="377.6,388" sap2010:WorkflowViewState.IdRef="Sequence_22">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:WriteCell Cell="B7" DisplayName="Write Cell Workbook" sap:VirtualizedContainerService.HintSize="334.4,116" sap2010:WorkflowViewState.IdRef="WriteCell_4" SheetName="Config" Text="3" WorkbookPath="config\config.xlsx">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:WriteCell>
                          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334.4,142.4" sap2010:WorkflowViewState.IdRef="LogMessage_6">
                            <ui:LogMessage.Level>
                              <InArgument x:TypeArguments="ui:LogLevel">
                                <CSharpValue x:TypeArguments="ui:LogLevel" sap2010:WorkflowViewState.IdRef="CSharpValue`1_135">
                                  <CSharpValue.Result>
                                    <OutArgument x:TypeArguments="ui:LogLevel" />
                                  </CSharpValue.Result>UiPath.Core.Activities.LogLevel.Trace</CSharpValue>
                              </InArgument>
                            </ui:LogMessage.Level>
                            <ui:LogMessage.Message>
                              <InArgument x:TypeArguments="x:Object">
                                <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_136">
                                  <CSharpValue.Result>
                                    <OutArgument x:TypeArguments="x:Object" />
                                  </CSharpValue.Result>"file trên drive đã đầy đủ mã"</CSharpValue>
                              </InArgument>
                            </ui:LogMessage.Message>
                          </ui:LogMessage>
                        </Sequence>
                      </If.Else>
                    </If>
                  </Sequence>
                </FlowStep>
                <FlowStep x:Key="3" x:Name="__ReferenceID2">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <av:Point x:Key="ShapeLocation">190.00000000000003,338.4</av:Point>
                      <av:Size x:Key="ShapeSize">200,83.2</av:Size>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Sequence DisplayName="Tải file Danh sách Mã vật tư hoàn chỉnh" sap:VirtualizedContainerService.HintSize="688,2837.6" sap2010:WorkflowViewState.IdRef="Sequence_23">
                    <Sequence.Variables>
                      <Variable x:TypeArguments="gadvd:File[]" Name="folderList" />
                      <Variable x:TypeArguments="gadvd:File[]" Name="fileList" />
                      <Variable x:TypeArguments="gadvd:File" Name="filetoCheck" />
                      <Variable x:TypeArguments="sd:DataTable" Name="dataTable" />
                    </Sequence.Variables>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <uga:FindFiles ContinueOnError="{x:Null}" FirstResultId="{x:Null}" AuthScopesInvalid="False" DisplayName="Find Files and Folders" sap:VirtualizedContainerService.HintSize="625.6,81.6" sap2010:WorkflowViewState.IdRef="FindFiles_3" MaxResults="50" SupportsTeamDrives="False">
                      <uga:FindFiles.DriveTarget>
                        <InArgument x:TypeArguments="ugad:IGoogleDriveTarget">
                          <CSharpValue x:TypeArguments="ugad:IGoogleDriveTarget" sap2010:WorkflowViewState.IdRef="CSharpValue`1_374">GoogleDrive</CSharpValue>
                        </InArgument>
                      </uga:FindFiles.DriveTarget>
                      <uga:FindFiles.Result>
                        <OutArgument x:TypeArguments="gadvd:File[]">
                          <CSharpReference x:TypeArguments="gadvd:File[]" sap2010:WorkflowViewState.IdRef="CSharpReference`1_25">
                            <CSharpReference.Result>
                              <OutArgument x:TypeArguments="Location(gadvd:File[])" />
                            </CSharpReference.Result>folderList</CSharpReference>
                        </OutArgument>
                      </uga:FindFiles.Result>
                      <uga:FindFiles.SearchExpression>
                        <InArgument x:TypeArguments="x:String">
                          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_140">
                            <CSharpValue.Result>
                              <OutArgument x:TypeArguments="x:String" />
                            </CSharpValue.Result>string.Format("name = '{0}'",in_config["uploadFolderName"])</CSharpValue>
                        </InArgument>
                      </uga:FindFiles.SearchExpression>
                    </uga:FindFiles>
                    <uga:FindFiles ContinueOnError="{x:Null}" FirstResultId="{x:Null}" AuthScopesInvalid="False" DisplayName="Find Files and Folders" sap:VirtualizedContainerService.HintSize="625.6,81.6" sap2010:WorkflowViewState.IdRef="FindFiles_4" MaxResults="50" SupportsTeamDrives="False">
                      <uga:FindFiles.DriveTarget>
                        <InArgument x:TypeArguments="ugad:IGoogleDriveTarget">
                          <CSharpValue x:TypeArguments="ugad:IGoogleDriveTarget" sap2010:WorkflowViewState.IdRef="CSharpValue`1_375">GoogleDrive</CSharpValue>
                        </InArgument>
                      </uga:FindFiles.DriveTarget>
                      <uga:FindFiles.Result>
                        <OutArgument x:TypeArguments="gadvd:File[]">
                          <CSharpReference x:TypeArguments="gadvd:File[]" sap2010:WorkflowViewState.IdRef="CSharpReference`1_26">
                            <CSharpReference.Result>
                              <OutArgument x:TypeArguments="Location(gadvd:File[])" />
                            </CSharpReference.Result>fileList</CSharpReference>
                        </OutArgument>
                      </uga:FindFiles.Result>
                      <uga:FindFiles.SearchExpression>
                        <InArgument x:TypeArguments="x:String">
                          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_142">
                            <CSharpValue.Result>
                              <OutArgument x:TypeArguments="x:String" />
                            </CSharpValue.Result>string.Format("parents in '{0}'", folderList[0].Id)</CSharpValue>
                        </InArgument>
                      </uga:FindFiles.SearchExpression>
                    </uga:FindFiles>
                    <Assign sap:VirtualizedContainerService.HintSize="625.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_7">
                      <Assign.To>
                        <OutArgument x:TypeArguments="gadvd:File">
                          <CSharpReference x:TypeArguments="gadvd:File" sap2010:WorkflowViewState.IdRef="CSharpReference`1_27">
                            <CSharpReference.Result>
                              <OutArgument x:TypeArguments="Location(gadvd:File)" />
                            </CSharpReference.Result>filetoCheck</CSharpReference>
                        </OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="gadvd:File">
                          <CSharpValue x:TypeArguments="gadvd:File" sap2010:WorkflowViewState.IdRef="CSharpValue`1_144">
                            <CSharpValue.Result>
                              <OutArgument x:TypeArguments="gadvd:File" />
                            </CSharpValue.Result>fileList[0]</CSharpValue>
                        </InArgument>
                      </Assign.Value>
                    </Assign>
                    <uga:DownloadFile ContinueOnError="{x:Null}" FileFriendlyName="{x:Null}" AuthScopesInvalid="False" DisplayName="Download File" FileIdSelectionMode="EnterId" sap:VirtualizedContainerService.HintSize="625.6,150.4" sap2010:WorkflowViewState.IdRef="DownloadFile_3" SupportsTeamDrives="False">
                      <uga:DownloadFile.DriveTarget>
                        <InArgument x:TypeArguments="ugad:IGoogleDriveTarget">
                          <CSharpValue x:TypeArguments="ugad:IGoogleDriveTarget" sap2010:WorkflowViewState.IdRef="CSharpValue`1_376">GoogleDrive</CSharpValue>
                        </InArgument>
                      </uga:DownloadFile.DriveTarget>
                      <uga:DownloadFile.FileId>
                        <InArgument x:TypeArguments="x:String">
                          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_145">
                            <CSharpValue.Result>
                              <OutArgument x:TypeArguments="x:String" />
                            </CSharpValue.Result>fileList[0].Id</CSharpValue>
                        </InArgument>
                      </uga:DownloadFile.FileId>
                      <uga:DownloadFile.LocalPath>
                        <InArgument x:TypeArguments="x:String">
                          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_169">
                            <CSharpValue.Result>
                              <OutArgument x:TypeArguments="x:String" />
                            </CSharpValue.Result>in_FileToCheck</CSharpValue>
                        </InArgument>
                      </uga:DownloadFile.LocalPath>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </uga:DownloadFile>
                    <ueab:ExcelProcessScopeX DisplayAlerts="{x:Null}" ExistingProcessAction="{x:Null}" LaunchMethod="{x:Null}" LaunchTimeout="{x:Null}" MacroSettings="{x:Null}" DisplayName="Excel Process Scope" FileConflictResolution="CloseWithoutSaving" sap:VirtualizedContainerService.HintSize="625.6,2170.4" sap2010:WorkflowViewState.IdRef="ExcelProcessScopeX_2" ProcessMode="AlwaysCreateNew" ShowExcelWindow="False">
                      <ueab:ExcelProcessScopeX.Body>
                        <ActivityAction x:TypeArguments="ui:IExcelProcess">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="ui:IExcelProcess" Name="ExcelProcessScopeTag" />
                          </ActivityAction.Argument>
                          <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="592,2084" sap2010:WorkflowViewState.IdRef="Sequence_30">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ueab:ExcelApplicationCard Password="{x:Null}" ReadFormatting="{x:Null}" DisplayName="Use Excel File" sap:VirtualizedContainerService.HintSize="529.6,441.6" sap2010:WorkflowViewState.IdRef="ExcelApplicationCard_2" ResizeWindow="None">
                              <ueab:ExcelApplicationCard.Body>
                                <ActivityAction x:TypeArguments="ue:IWorkbookQuickHandle">
                                  <ActivityAction.Argument>
                                    <DelegateInArgument x:TypeArguments="ue:IWorkbookQuickHandle" Name="Excel" />
                                  </ActivityAction.Argument>
                                  <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="449.6,172" sap2010:WorkflowViewState.IdRef="Sequence_24">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:ExcelReadRange AddHeaders="True" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="387.2,60" sap2010:WorkflowViewState.IdRef="ExcelReadRange_2" Range="B2" SheetName="Danh mục cập nhật">
                                      <ui:ExcelReadRange.DataTable>
                                        <OutArgument x:TypeArguments="sd:DataTable">
                                          <CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_28">
                                            <CSharpReference.Result>
                                              <OutArgument x:TypeArguments="Location(sd:DataTable)" />
                                            </CSharpReference.Result>dataTable</CSharpReference>
                                        </OutArgument>
                                      </ui:ExcelReadRange.DataTable>
                                    </ui:ExcelReadRange>
                                  </Sequence>
                                </ActivityAction>
                              </ueab:ExcelApplicationCard.Body>
                              <ueab:ExcelApplicationCard.WorkbookPath>
                                <InArgument x:TypeArguments="x:String">
                                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_177">
                                    <CSharpValue.Result>
                                      <OutArgument x:TypeArguments="x:String" />
                                    </CSharpValue.Result>in_FileToCheck</CSharpValue>
                                </InArgument>
                              </ueab:ExcelApplicationCard.WorkbookPath>
                            </ueab:ExcelApplicationCard>
                            <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="529.6,980.8" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_1" InstanceCachePeriod="3000" Visible="False" WorkbookPath="Output\\Danh muc VTHH.xlsx">
                              <ui:ExcelApplicationScope.Body>
                                <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                                  <ActivityAction.Argument>
                                    <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                                  </ActivityAction.Argument>
                                  <Sequence DisplayName="XOÁ DỮ LIỆU FILE MẪU VTHH" sap:VirtualizedContainerService.HintSize="496,871.2" sap2010:WorkflowViewState.IdRef="Sequence_38">
                                    <Sequence.Variables>
                                      <Variable x:TypeArguments="sd:DataTable" Name="dtNewGoodsList" />
                                      <Variable x:TypeArguments="x:Int32" Name="count" />
                                      <Variable x:TypeArguments="sd:DataTable" Name="dtUpdateGoodsList" />
                                    </Sequence.Variables>
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:ExcelReadRange AddHeaders="True" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="433.6,60" sap2010:WorkflowViewState.IdRef="ExcelReadRange_4" Range="A1" SheetName="Danh mục cập nhật">
                                      <ui:ExcelReadRange.DataTable>
                                        <OutArgument x:TypeArguments="sd:DataTable">
                                          <CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_43">dtUpdateGoodsList</CSharpReference>
                                        </OutArgument>
                                      </ui:ExcelReadRange.DataTable>
                                    </ui:ExcelReadRange>
                                    <Assign sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_13">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:Int32">
                                          <CSharpReference x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpReference`1_44">count</CSharpReference>
                                        </OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:Int32">
                                          <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_312">dtUpdateGoodsList.RowCount() + 1</CSharpValue>
                                        </InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="433.6,90.4" sap2010:WorkflowViewState.IdRef="WriteLine_1">
                                      <InArgument x:TypeArguments="x:String">
                                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_372">count.ToString()</CSharpValue>
                                      </InArgument>
                                    </WriteLine>
                                    <If sap:VirtualizedContainerService.HintSize="433.6,407.2" sap2010:WorkflowViewState.IdRef="If_9">
                                      <If.Condition>
                                        <InArgument x:TypeArguments="x:Boolean">
                                          <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_373">count &gt; 2</CSharpValue>
                                        </InArgument>
                                      </If.Condition>
                                      <If.Then>
                                        <Sequence sap:VirtualizedContainerService.HintSize="377.6,224" sap2010:WorkflowViewState.IdRef="Sequence_39">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <ui:ExcelDeleteRange DisplayName="Delete Range" sap:VirtualizedContainerService.HintSize="334.4,134.4" sap2010:WorkflowViewState.IdRef="ExcelDeleteRange_2" SheetName="Danh mục cập nhật" ShiftCells="False" ShiftOption="ShiftUp">
                                            <ui:ExcelDeleteRange.Range>
                                              <InArgument x:TypeArguments="x:String">
                                                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_313">"3:" + count</CSharpValue>
                                              </InArgument>
                                            </ui:ExcelDeleteRange.Range>
                                          </ui:ExcelDeleteRange>
                                        </Sequence>
                                      </If.Then>
                                      <If.Else>
                                        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_40" />
                                      </If.Else>
                                    </If>
                                  </Sequence>
                                </ActivityAction>
                              </ui:ExcelApplicationScope.Body>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:ExcelApplicationScope>
                            <ueab:ExcelApplicationCard Password="{x:Null}" ReadFormatting="{x:Null}" DisplayName="Use Excel File" sap:VirtualizedContainerService.HintSize="529.6,469.6" sap2010:WorkflowViewState.IdRef="ExcelApplicationCard_3" ResizeWindow="None">
                              <ueab:ExcelApplicationCard.Body>
                                <ActivityAction x:TypeArguments="ue:IWorkbookQuickHandle">
                                  <ActivityAction.Argument>
                                    <DelegateInArgument x:TypeArguments="ue:IWorkbookQuickHandle" Name="Excel" />
                                  </ActivityAction.Argument>
                                  <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="449.6,200" sap2010:WorkflowViewState.IdRef="Sequence_31">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:ExcelWriteRange AddHeaders="False" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="387.2,88" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_1" SheetName="Danh mục cập nhật" StartingCell="A3">
                                      <ui:ExcelWriteRange.DataTable>
                                        <InArgument x:TypeArguments="sd:DataTable">
                                          <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_184">
                                            <CSharpValue.Result>
                                              <OutArgument x:TypeArguments="sd:DataTable" />
                                            </CSharpValue.Result>dataTable</CSharpValue>
                                        </InArgument>
                                      </ui:ExcelWriteRange.DataTable>
                                    </ui:ExcelWriteRange>
                                  </Sequence>
                                </ActivityAction>
                              </ueab:ExcelApplicationCard.Body>
                              <ueab:ExcelApplicationCard.WorkbookPath>
                                <InArgument x:TypeArguments="x:String">
                                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_182">
                                    <CSharpValue.Result>
                                      <OutArgument x:TypeArguments="x:String" />
                                    </CSharpValue.Result>in_FileNhapMa</CSharpValue>
                                </InArgument>
                              </ueab:ExcelApplicationCard.WorkbookPath>
                            </ueab:ExcelApplicationCard>
                          </Sequence>
                        </ActivityAction>
                      </ueab:ExcelProcessScopeX.Body>
                    </ueab:ExcelProcessScopeX>
                  </Sequence>
                </FlowStep>
              </FlowSwitch>
              <x:Reference>__ReferenceID0</x:Reference>
              <x:Reference>__ReferenceID1</x:Reference>
              <x:Reference>__ReferenceID2</x:Reference>
            </Flowchart>
          </Sequence>
        </ActivityAction>
      </ugad:GoogleDriveApplicationScope.Body>
      <ugad:GoogleDriveApplicationScope.CredentialID>
        <InArgument x:TypeArguments="x:String">
          <Literal x:TypeArguments="x:String" Value="" />
        </InArgument>
      </ugad:GoogleDriveApplicationScope.CredentialID>
      <ugad:GoogleDriveApplicationScope.CredentialSecret>
        <InArgument x:TypeArguments="x:String">
          <Literal x:TypeArguments="x:String" Value="" />
        </InArgument>
      </ugad:GoogleDriveApplicationScope.CredentialSecret>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ugad:GoogleDriveApplicationScope>
  </Sequence>
</Activity>