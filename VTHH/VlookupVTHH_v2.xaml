<Activity mc:Ignorable="sap sap2010" x:Class="VlookupVTHH_v2" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data.Common" xmlns:si="clr-namespace:System.IO;assembly=System.Private.CoreLib" xmlns:ue="clr-namespace:UiPath.Excel;assembly=UiPath.Excel.Activities" xmlns:ueab="clr-namespace:UiPath.Excel.Activities.Business;assembly=UiPath.Excel.Activities" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_downloadMonthBegin" Type="InArgument(x:String)" />
    <x:Property Name="in_downloadMonthEnd" Type="InArgument(x:String)" />
    <x:Property Name="in_taxCode" Type="InArgument(x:String)" />
  </x:Members>
  <sap2010:ExpressionActivityEditor.ExpressionActivityEditor>C#</sap2010:ExpressionActivityEditor.ExpressionActivityEditor>
  <sap:VirtualizedContainerService.HintSize>824,8200</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ActivityBuilder_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Text</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>UiPath.Shared.Activities.Business</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>UiPath.DataTableUtilities</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.CSharp</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>Microsoft.Win32.Primitives</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.Watcher</AssemblyReference>
      <AssemblyReference>System.IO.Packaging</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.AccessControl</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.DriveInfo</AssemblyReference>
      <AssemblyReference>UiPath.GSuite.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.ViewModels</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Data.SqlClient</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="VlookupVTHH_V2" sap:VirtualizedContainerService.HintSize="780.8,8135.2" sap2010:WorkflowViewState.IdRef="Sequence_15">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:Int32" Name="indexLastRow" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:ExcelApplicationScope Password="{x:Null}" CreateNewFile="False" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="718.4,2844.8" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_4" InstanceCachePeriod="3000" Visible="False" WorkbookPath="Output\\Danh muc VTHH.xlsx">
      <ui:ExcelApplicationScope.Body>
        <ActivityAction x:TypeArguments="ui:WorkbookApplication">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="620.8,2695.2" sap2010:WorkflowViewState.IdRef="Sequence_24">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Sequence DisplayName="LOAI BO KHOANG TRANG TRONG TEN HANG" sap:VirtualizedContainerService.HintSize="558.4,1381.6" sap2010:WorkflowViewState.IdRef="Sequence_22">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Sequence DisplayName="DANH MUC CU" sap:VirtualizedContainerService.HintSize="496,549.6" sap2010:WorkflowViewState.IdRef="Sequence_16">
                <Sequence.Variables>
                  <Variable x:TypeArguments="sd:DataTable" Name="dtOldVTHH" />
                </Sequence.Variables>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:ExcelWriteCell Cell="K1" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="433.6,88" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_3" SheetName="Danh mục cũ">
                  <ui:ExcelWriteCell.Text>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_28">"=SUBSTITUTE(LOWER(B1),\" \",\"\")"</CSharpValue>
                    </InArgument>
                  </ui:ExcelWriteCell.Text>
                </ui:ExcelWriteCell>
                <ui:ExcelReadRange AddHeaders="False" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="433.6,60" sap2010:WorkflowViewState.IdRef="ExcelReadRange_4" Range="A1" SheetName="Danh mục cũ">
                  <ui:ExcelReadRange.DataTable>
                    <OutArgument x:TypeArguments="sd:DataTable">
                      <CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_7">dtOldVTHH</CSharpReference>
                    </OutArgument>
                  </ui:ExcelReadRange.DataTable>
                </ui:ExcelReadRange>
                <Assign sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_4">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:Int32">
                      <CSharpReference x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpReference`1_8">indexLastRow</CSharpReference>
                    </OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:Int32">
                      <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_9">dtOldVTHH.RowCount()</CSharpValue>
                    </InArgument>
                  </Assign.Value>
                </Assign>
                <ui:ExcelAutoFillRange DisplayName="Auto Fill Range" sap:VirtualizedContainerService.HintSize="433.6,88" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_3" SheetName="Danh mục cũ" SourceRange="K1">
                  <ui:ExcelAutoFillRange.FillRange>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_10">"K1:K" + indexLastRow</CSharpValue>
                    </InArgument>
                  </ui:ExcelAutoFillRange.FillRange>
                </ui:ExcelAutoFillRange>
              </Sequence>
              <Sequence DisplayName="DANH MUC MOI" sap:VirtualizedContainerService.HintSize="496,680" sap2010:WorkflowViewState.IdRef="Sequence_17">
                <Sequence.Variables>
                  <Variable x:TypeArguments="sd:DataTable" Name="dtNewVTHH" />
                </Sequence.Variables>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:ExcelWriteCell Cell="K3" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="433.6,88" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_4" SheetName="Danh mục mới">
                  <ui:ExcelWriteCell.Text>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_29">"=SUBSTITUTE(LOWER(B3),\" \",\"\")"</CSharpValue>
                    </InArgument>
                  </ui:ExcelWriteCell.Text>
                </ui:ExcelWriteCell>
                <ui:ExcelReadRange AddHeaders="False" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="433.6,60" sap2010:WorkflowViewState.IdRef="ExcelReadRange_5" Range="A1" SheetName="Danh mục mới">
                  <ui:ExcelReadRange.DataTable>
                    <OutArgument x:TypeArguments="sd:DataTable">
                      <CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_9">dtNewVTHH</CSharpReference>
                    </OutArgument>
                  </ui:ExcelReadRange.DataTable>
                </ui:ExcelReadRange>
                <Assign sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_5">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:Int32">
                      <CSharpReference x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpReference`1_10">indexLastRow</CSharpReference>
                    </OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:Int32">
                      <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_12">dtNewVTHH.RowCount()</CSharpValue>
                    </InArgument>
                  </Assign.Value>
                </Assign>
                <ui:ExcelAutoFillRange DisplayName="Auto Fill Range" sap:VirtualizedContainerService.HintSize="433.6,88" sap2010:WorkflowViewState.IdRef="ExcelAutoFillRange_4" SheetName="Danh mục mới" SourceRange="K3">
                  <ui:ExcelAutoFillRange.FillRange>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_13">"K3:K" + indexLastRow</CSharpValue>
                    </InArgument>
                  </ui:ExcelAutoFillRange.FillRange>
                </ui:ExcelAutoFillRange>
                <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="433.6,90.4" sap2010:WorkflowViewState.IdRef="WriteLine_1">
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_14">indexLastRow.ToString()</CSharpValue>
                  </InArgument>
                </WriteLine>
              </Sequence>
            </Sequence>
            <Sequence DisplayName="BO DAU TRONG TEN HANG" sap:VirtualizedContainerService.HintSize="558.4,1161.6" sap2010:WorkflowViewState.IdRef="Sequence_23">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Sequence DisplayName="DANH MUC MOI" sap:VirtualizedContainerService.HintSize="449.6,504.8" sap2010:WorkflowViewState.IdRef="Sequence_18">
                <Sequence.Variables>
                  <Variable x:TypeArguments="sd:DataTable" Name="dtNewVTHH" />
                </Sequence.Variables>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:ExcelReadRange AddHeaders="True" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="387.2,60" sap2010:WorkflowViewState.IdRef="ExcelReadRange_6" Range="K2" SheetName="Danh mục mới">
                  <ui:ExcelReadRange.DataTable>
                    <OutArgument x:TypeArguments="sd:DataTable">
                      <CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_11">dtNewVTHH</CSharpReference>
                    </OutArgument>
                  </ui:ExcelReadRange.DataTable>
                </ui:ExcelReadRange>
                <ui:InvokeCode ContinueOnError="{x:Null}" Code="string RemoveVietnameseDiacritics(string inputText)&#xA;{&#xA;    string[] vietnameseChars = new string[]&#xA;    {&#xA;        &quot;à&quot;, &quot;á&quot;, &quot;ạ&quot;, &quot;ả&quot;, &quot;ã&quot;, &quot;â&quot;, &quot;ầ&quot;, &quot;ấ&quot;, &quot;ậ&quot;, &quot;ẩ&quot;, &quot;ẫ&quot;, &quot;ă&quot;, &quot;ằ&quot;, &quot;ắ&quot;, &quot;ặ&quot;, &quot;ẳ&quot;, &quot;ẵ&quot;,&#xA;        &quot;è&quot;, &quot;é&quot;, &quot;ẹ&quot;, &quot;ẻ&quot;, &quot;ẽ&quot;, &quot;ê&quot;, &quot;ề&quot;, &quot;ế&quot;, &quot;ệ&quot;, &quot;ể&quot;, &quot;ễ&quot;,&#xA;        &quot;ì&quot;, &quot;í&quot;, &quot;ị&quot;, &quot;ỉ&quot;, &quot;ĩ&quot;,&#xA;        &quot;ò&quot;, &quot;ó&quot;, &quot;ọ&quot;, &quot;ỏ&quot;, &quot;õ&quot;, &quot;ô&quot;, &quot;ồ&quot;, &quot;ố&quot;, &quot;ộ&quot;, &quot;ổ&quot;, &quot;ỗ&quot;, &quot;ơ&quot;, &quot;ờ&quot;, &quot;ớ&quot;, &quot;ợ&quot;, &quot;ở&quot;, &quot;ỡ&quot;,&#xA;        &quot;ù&quot;, &quot;ú&quot;, &quot;ụ&quot;, &quot;ủ&quot;, &quot;ũ&quot;, &quot;ư&quot;, &quot;ừ&quot;, &quot;ứ&quot;, &quot;ự&quot;, &quot;ử&quot;, &quot;ữ&quot;,&#xA;        &quot;ỳ&quot;, &quot;ý&quot;, &quot;ỵ&quot;, &quot;ỷ&quot;, &quot;ỹ&quot;,&#xA;        &quot;đ&quot;,&#xA;        &quot;À&quot;, &quot;Á&quot;, &quot;Ạ&quot;, &quot;Ả&quot;, &quot;Ã&quot;, &quot;Â&quot;, &quot;Ầ&quot;, &quot;Ấ&quot;, &quot;Ậ&quot;, &quot;Ẩ&quot;, &quot;Ẫ&quot;, &quot;Ă&quot;, &quot;Ằ&quot;, &quot;Ắ&quot;, &quot;Ặ&quot;, &quot;Ẳ&quot;, &quot;Ẵ&quot;,&#xA;        &quot;È&quot;, &quot;É&quot;, &quot;Ẹ&quot;, &quot;Ẻ&quot;, &quot;Ẽ&quot;, &quot;Ê&quot;, &quot;Ề&quot;, &quot;Ế&quot;, &quot;Ệ&quot;, &quot;Ể&quot;, &quot;Ễ&quot;,&#xA;        &quot;Ì&quot;, &quot;Í&quot;, &quot;Ị&quot;, &quot;Ỉ&quot;, &quot;Ĩ&quot;,&#xA;        &quot;Ò&quot;, &quot;Ó&quot;, &quot;Ọ&quot;, &quot;Ỏ&quot;, &quot;Õ&quot;, &quot;Ô&quot;, &quot;Ồ&quot;, &quot;Ố&quot;, &quot;Ộ&quot;, &quot;Ổ&quot;, &quot;Ỗ&quot;, &quot;Ơ&quot;, &quot;Ờ&quot;, &quot;Ớ&quot;, &quot;Ợ&quot;, &quot;Ở&quot;, &quot;Ỡ&quot;,&#xA;        &quot;Ù&quot;, &quot;Ú&quot;, &quot;Ụ&quot;, &quot;Ủ&quot;, &quot;Ũ&quot;, &quot;Ư&quot;, &quot;Ừ&quot;, &quot;Ứ&quot;, &quot;Ự&quot;, &quot;Ử&quot;, &quot;Ữ&quot;,&#xA;        &quot;Ỳ&quot;, &quot;Ý&quot;, &quot;Ỵ&quot;, &quot;Ỷ&quot;, &quot;Ỹ&quot;,&#xA;        &quot;Đ&quot;&#xA;    };&#xA;&#xA;    string[] nonVietnameseChars = new string[]&#xA;    {&#xA;        &quot;a&quot;, &quot;a&quot;, &quot;a&quot;, &quot;a&quot;, &quot;a&quot;, &quot;a&quot;, &quot;a&quot;, &quot;a&quot;, &quot;a&quot;, &quot;a&quot;, &quot;a&quot;, &quot;a&quot;, &quot;a&quot;, &quot;a&quot;, &quot;a&quot;, &quot;a&quot;, &quot;a&quot;,&#xA;        &quot;e&quot;, &quot;e&quot;, &quot;e&quot;, &quot;e&quot;, &quot;e&quot;, &quot;e&quot;, &quot;e&quot;, &quot;e&quot;, &quot;e&quot;, &quot;e&quot;, &quot;e&quot;,&#xA;        &quot;i&quot;, &quot;i&quot;, &quot;i&quot;, &quot;i&quot;, &quot;i&quot;,&#xA;        &quot;o&quot;, &quot;o&quot;, &quot;o&quot;, &quot;o&quot;, &quot;o&quot;, &quot;o&quot;, &quot;o&quot;, &quot;o&quot;, &quot;o&quot;, &quot;o&quot;, &quot;o&quot;, &quot;o&quot;, &quot;o&quot;, &quot;o&quot;, &quot;o&quot;, &quot;o&quot;, &quot;o&quot;,&#xA;        &quot;u&quot;, &quot;u&quot;, &quot;u&quot;, &quot;u&quot;, &quot;u&quot;, &quot;u&quot;, &quot;u&quot;, &quot;u&quot;, &quot;u&quot;, &quot;u&quot;, &quot;u&quot;,&#xA;        &quot;y&quot;, &quot;y&quot;, &quot;y&quot;, &quot;y&quot;, &quot;y&quot;,&#xA;        &quot;d&quot;,&#xA;        &quot;A&quot;, &quot;A&quot;, &quot;A&quot;, &quot;A&quot;, &quot;A&quot;, &quot;A&quot;, &quot;A&quot;, &quot;A&quot;, &quot;A&quot;, &quot;A&quot;, &quot;A&quot;, &quot;A&quot;, &quot;A&quot;, &quot;A&quot;, &quot;A&quot;, &quot;A&quot;, &quot;A&quot;,&#xA;        &quot;E&quot;, &quot;E&quot;, &quot;E&quot;, &quot;E&quot;, &quot;E&quot;, &quot;E&quot;, &quot;E&quot;, &quot;E&quot;, &quot;E&quot;, &quot;E&quot;, &quot;E&quot;,&#xA;        &quot;I&quot;, &quot;I&quot;, &quot;I&quot;, &quot;I&quot;, &quot;I&quot;,&#xA;        &quot;O&quot;, &quot;O&quot;, &quot;O&quot;, &quot;O&quot;, &quot;O&quot;, &quot;O&quot;, &quot;O&quot;, &quot;O&quot;, &quot;O&quot;, &quot;O&quot;, &quot;O&quot;, &quot;O&quot;, &quot;O&quot;, &quot;O&quot;, &quot;O&quot;, &quot;O&quot;, &quot;O&quot;,&#xA;        &quot;U&quot;, &quot;U&quot;, &quot;U&quot;, &quot;U&quot;, &quot;U&quot;, &quot;U&quot;, &quot;U&quot;, &quot;U&quot;, &quot;U&quot;, &quot;U&quot;, &quot;U&quot;,&#xA;        &quot;Y&quot;, &quot;Y&quot;, &quot;Y&quot;, &quot;Y&quot;, &quot;Y&quot;,&#xA;        &quot;D&quot;&#xA;    };&#xA;&#xA;    StringBuilder result = new StringBuilder(inputText);&#xA;    &#xA;    for (int i = 0; i &lt; vietnameseChars.Length; i++)&#xA;    {&#xA;        result = result.Replace(vietnameseChars[i], nonVietnameseChars[i]);&#xA;    }&#xA;    &#xA;    return result.ToString();&#xA;}&#xA;&#xA; foreach (DataRow row in in_DT.Rows)&#xA;{&#xA;    string originalText = row[&quot;Mô tả&quot;].ToString().Trim();&#xA;    if (!string.IsNullOrEmpty(originalText))&#xA;    {&#xA;        string str = RemoveVietnameseDiacritics(originalText);&#xA;        row[&quot;Mô tả&quot;] = str;&#xA;    }&#xA;}" DisplayName="Invoke Code" sap:VirtualizedContainerService.HintSize="387.2,164.8" sap2010:WorkflowViewState.IdRef="InvokeCode_2" Language="CSharp">
                  <ui:InvokeCode.Arguments>
                    <InOutArgument x:TypeArguments="sd:DataTable" x:Key="in_DT">
                      <CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_12">dtNewVTHH</CSharpReference>
                    </InOutArgument>
                  </ui:InvokeCode.Arguments>
                </ui:InvokeCode>
                <ui:ExcelWriteRange AddHeaders="False" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="387.2,88" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_2" SheetName="Danh mục mới" StartingCell="K3">
                  <ui:ExcelWriteRange.DataTable>
                    <InArgument x:TypeArguments="sd:DataTable">
                      <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_15">dtNewVTHH</CSharpValue>
                    </InArgument>
                  </ui:ExcelWriteRange.DataTable>
                </ui:ExcelWriteRange>
              </Sequence>
              <Sequence DisplayName="DANH MUC CU" sap:VirtualizedContainerService.HintSize="449.6,504.8" sap2010:WorkflowViewState.IdRef="Sequence_19">
                <Sequence.Variables>
                  <Variable x:TypeArguments="sd:DataTable" Name="dtNewVTHH" />
                  <Variable x:TypeArguments="sd:DataTable" Name="dtOldVTHH" />
                </Sequence.Variables>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:ExcelReadRange AddHeaders="False" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="387.2,60" sap2010:WorkflowViewState.IdRef="ExcelReadRange_7" Range="K1" SheetName="Danh mục cũ">
                  <ui:ExcelReadRange.DataTable>
                    <OutArgument x:TypeArguments="sd:DataTable">
                      <CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_13">dtOldVTHH</CSharpReference>
                    </OutArgument>
                  </ui:ExcelReadRange.DataTable>
                </ui:ExcelReadRange>
                <ui:InvokeCode ContinueOnError="{x:Null}" Code="string RemoveVietnameseDiacritics(string inputText)&#xA;{&#xA;    string[] vietnameseChars = new string[]&#xA;    {&#xA;        &quot;à&quot;, &quot;á&quot;, &quot;ạ&quot;, &quot;ả&quot;, &quot;ã&quot;, &quot;â&quot;, &quot;ầ&quot;, &quot;ấ&quot;, &quot;ậ&quot;, &quot;ẩ&quot;, &quot;ẫ&quot;, &quot;ă&quot;, &quot;ằ&quot;, &quot;ắ&quot;, &quot;ặ&quot;, &quot;ẳ&quot;, &quot;ẵ&quot;,&#xA;        &quot;è&quot;, &quot;é&quot;, &quot;ẹ&quot;, &quot;ẻ&quot;, &quot;ẽ&quot;, &quot;ê&quot;, &quot;ề&quot;, &quot;ế&quot;, &quot;ệ&quot;, &quot;ể&quot;, &quot;ễ&quot;,&#xA;        &quot;ì&quot;, &quot;í&quot;, &quot;ị&quot;, &quot;ỉ&quot;, &quot;ĩ&quot;,&#xA;        &quot;ò&quot;, &quot;ó&quot;, &quot;ọ&quot;, &quot;ỏ&quot;, &quot;õ&quot;, &quot;ô&quot;, &quot;ồ&quot;, &quot;ố&quot;, &quot;ộ&quot;, &quot;ổ&quot;, &quot;ỗ&quot;, &quot;ơ&quot;, &quot;ờ&quot;, &quot;ớ&quot;, &quot;ợ&quot;, &quot;ở&quot;, &quot;ỡ&quot;,&#xA;        &quot;ù&quot;, &quot;ú&quot;, &quot;ụ&quot;, &quot;ủ&quot;, &quot;ũ&quot;, &quot;ư&quot;, &quot;ừ&quot;, &quot;ứ&quot;, &quot;ự&quot;, &quot;ử&quot;, &quot;ữ&quot;,&#xA;        &quot;ỳ&quot;, &quot;ý&quot;, &quot;ỵ&quot;, &quot;ỷ&quot;, &quot;ỹ&quot;,&#xA;        &quot;đ&quot;,&#xA;        &quot;À&quot;, &quot;Á&quot;, &quot;Ạ&quot;, &quot;Ả&quot;, &quot;Ã&quot;, &quot;Â&quot;, &quot;Ầ&quot;, &quot;Ấ&quot;, &quot;Ậ&quot;, &quot;Ẩ&quot;, &quot;Ẫ&quot;, &quot;Ă&quot;, &quot;Ằ&quot;, &quot;Ắ&quot;, &quot;Ặ&quot;, &quot;Ẳ&quot;, &quot;Ẵ&quot;,&#xA;        &quot;È&quot;, &quot;É&quot;, &quot;Ẹ&quot;, &quot;Ẻ&quot;, &quot;Ẽ&quot;, &quot;Ê&quot;, &quot;Ề&quot;, &quot;Ế&quot;, &quot;Ệ&quot;, &quot;Ể&quot;, &quot;Ễ&quot;,&#xA;        &quot;Ì&quot;, &quot;Í&quot;, &quot;Ị&quot;, &quot;Ỉ&quot;, &quot;Ĩ&quot;,&#xA;        &quot;Ò&quot;, &quot;Ó&quot;, &quot;Ọ&quot;, &quot;Ỏ&quot;, &quot;Õ&quot;, &quot;Ô&quot;, &quot;Ồ&quot;, &quot;Ố&quot;, &quot;Ộ&quot;, &quot;Ổ&quot;, &quot;Ỗ&quot;, &quot;Ơ&quot;, &quot;Ờ&quot;, &quot;Ớ&quot;, &quot;Ợ&quot;, &quot;Ở&quot;, &quot;Ỡ&quot;,&#xA;        &quot;Ù&quot;, &quot;Ú&quot;, &quot;Ụ&quot;, &quot;Ủ&quot;, &quot;Ũ&quot;, &quot;Ư&quot;, &quot;Ừ&quot;, &quot;Ứ&quot;, &quot;Ự&quot;, &quot;Ử&quot;, &quot;Ữ&quot;,&#xA;        &quot;Ỳ&quot;, &quot;Ý&quot;, &quot;Ỵ&quot;, &quot;Ỷ&quot;, &quot;Ỹ&quot;,&#xA;        &quot;Đ&quot;&#xA;    };&#xA;&#xA;    string[] nonVietnameseChars = new string[]&#xA;    {&#xA;        &quot;a&quot;, &quot;a&quot;, &quot;a&quot;, &quot;a&quot;, &quot;a&quot;, &quot;a&quot;, &quot;a&quot;, &quot;a&quot;, &quot;a&quot;, &quot;a&quot;, &quot;a&quot;, &quot;a&quot;, &quot;a&quot;, &quot;a&quot;, &quot;a&quot;, &quot;a&quot;, &quot;a&quot;,&#xA;        &quot;e&quot;, &quot;e&quot;, &quot;e&quot;, &quot;e&quot;, &quot;e&quot;, &quot;e&quot;, &quot;e&quot;, &quot;e&quot;, &quot;e&quot;, &quot;e&quot;, &quot;e&quot;,&#xA;        &quot;i&quot;, &quot;i&quot;, &quot;i&quot;, &quot;i&quot;, &quot;i&quot;,&#xA;        &quot;o&quot;, &quot;o&quot;, &quot;o&quot;, &quot;o&quot;, &quot;o&quot;, &quot;o&quot;, &quot;o&quot;, &quot;o&quot;, &quot;o&quot;, &quot;o&quot;, &quot;o&quot;, &quot;o&quot;, &quot;o&quot;, &quot;o&quot;, &quot;o&quot;, &quot;o&quot;, &quot;o&quot;,&#xA;        &quot;u&quot;, &quot;u&quot;, &quot;u&quot;, &quot;u&quot;, &quot;u&quot;, &quot;u&quot;, &quot;u&quot;, &quot;u&quot;, &quot;u&quot;, &quot;u&quot;, &quot;u&quot;,&#xA;        &quot;y&quot;, &quot;y&quot;, &quot;y&quot;, &quot;y&quot;, &quot;y&quot;,&#xA;        &quot;d&quot;,&#xA;        &quot;A&quot;, &quot;A&quot;, &quot;A&quot;, &quot;A&quot;, &quot;A&quot;, &quot;A&quot;, &quot;A&quot;, &quot;A&quot;, &quot;A&quot;, &quot;A&quot;, &quot;A&quot;, &quot;A&quot;, &quot;A&quot;, &quot;A&quot;, &quot;A&quot;, &quot;A&quot;, &quot;A&quot;,&#xA;        &quot;E&quot;, &quot;E&quot;, &quot;E&quot;, &quot;E&quot;, &quot;E&quot;, &quot;E&quot;, &quot;E&quot;, &quot;E&quot;, &quot;E&quot;, &quot;E&quot;, &quot;E&quot;,&#xA;        &quot;I&quot;, &quot;I&quot;, &quot;I&quot;, &quot;I&quot;, &quot;I&quot;,&#xA;        &quot;O&quot;, &quot;O&quot;, &quot;O&quot;, &quot;O&quot;, &quot;O&quot;, &quot;O&quot;, &quot;O&quot;, &quot;O&quot;, &quot;O&quot;, &quot;O&quot;, &quot;O&quot;, &quot;O&quot;, &quot;O&quot;, &quot;O&quot;, &quot;O&quot;, &quot;O&quot;, &quot;O&quot;,&#xA;        &quot;U&quot;, &quot;U&quot;, &quot;U&quot;, &quot;U&quot;, &quot;U&quot;, &quot;U&quot;, &quot;U&quot;, &quot;U&quot;, &quot;U&quot;, &quot;U&quot;, &quot;U&quot;,&#xA;        &quot;Y&quot;, &quot;Y&quot;, &quot;Y&quot;, &quot;Y&quot;, &quot;Y&quot;,&#xA;        &quot;D&quot;&#xA;    };&#xA;&#xA;    StringBuilder result = new StringBuilder(inputText);&#xA;    &#xA;    for (int i = 0; i &lt; vietnameseChars.Length; i++)&#xA;    {&#xA;        result = result.Replace(vietnameseChars[i], nonVietnameseChars[i]);&#xA;    }&#xA;    &#xA;    return result.ToString();&#xA;}&#xA;&#xA; foreach (DataRow row in in_DT.Rows)&#xA;{&#xA;    string originalText = row[0].ToString().Trim();&#xA;    if (!string.IsNullOrEmpty(originalText))&#xA;    {&#xA;        string str = RemoveVietnameseDiacritics(originalText);&#xA;        row[0] = str;&#xA;    }&#xA;}" DisplayName="Invoke Code" sap:VirtualizedContainerService.HintSize="387.2,164.8" sap2010:WorkflowViewState.IdRef="InvokeCode_3" Language="CSharp">
                  <ui:InvokeCode.Arguments>
                    <InOutArgument x:TypeArguments="sd:DataTable" x:Key="in_DT">
                      <CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_14">dtOldVTHH</CSharpReference>
                    </InOutArgument>
                  </ui:InvokeCode.Arguments>
                </ui:InvokeCode>
                <ui:ExcelWriteRange AddHeaders="False" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="387.2,88" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_3" SheetName="Danh mục cũ" StartingCell="K1">
                  <ui:ExcelWriteRange.DataTable>
                    <InArgument x:TypeArguments="sd:DataTable">
                      <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_16">dtOldVTHH</CSharpValue>
                    </InArgument>
                  </ui:ExcelWriteRange.DataTable>
                </ui:ExcelWriteRange>
              </Sequence>
            </Sequence>
          </Sequence>
        </ActivityAction>
      </ui:ExcelApplicationScope.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:ExcelApplicationScope>
    <ueab:ExcelProcessScopeX DisplayAlerts="{x:Null}" ExistingProcessAction="{x:Null}" FileConflictResolution="{x:Null}" LaunchMethod="{x:Null}" LaunchTimeout="{x:Null}" MacroSettings="{x:Null}" ProcessMode="{x:Null}" DisplayName="Excel Process Scope" sap:VirtualizedContainerService.HintSize="718.4,793.6" sap2010:WorkflowViewState.IdRef="ExcelProcessScopeX_1" ShowExcelWindow="False">
      <ueab:ExcelProcessScopeX.Body>
        <ActivityAction x:TypeArguments="ui:IExcelProcess">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="ui:IExcelProcess" Name="ExcelProcessScopeTag" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="592,707.2" sap2010:WorkflowViewState.IdRef="Sequence_26">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ueab:ExcelApplicationCard Password="{x:Null}" ReadFormatting="{x:Null}" CreateNewFile="False" DisplayName="Use Excel File" sap:VirtualizedContainerService.HintSize="529.6,595.2" sap2010:WorkflowViewState.IdRef="ExcelApplicationCard_1" ResizeWindow="None" WorkbookPath="Output\\Danh muc VTHH.xlsx">
              <ueab:ExcelApplicationCard.Body>
                <ActivityAction x:TypeArguments="ue:IWorkbookQuickHandle">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="ue:IWorkbookQuickHandle" Name="Excel" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="496,325.6" sap2010:WorkflowViewState.IdRef="Sequence_25">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ueab:RemoveDuplicatesX DisplayName="Remove Duplicates" sap:VirtualizedContainerService.HintSize="433.6,213.6" sap2010:WorkflowViewState.IdRef="RemoveDuplicatesX_1">
                      <ueab:RemoveDuplicatesX.Columns>
                        <scg:List x:TypeArguments="InArgument(x:String)" Capacity="1">
                          <InArgument x:TypeArguments="x:String">Mô tả</InArgument>
                        </scg:List>
                      </ueab:RemoveDuplicatesX.Columns>
                      <ueab:RemoveDuplicatesX.Range>
                        <InArgument x:TypeArguments="ue:IReadWriteRangeRef">
                          <CSharpValue x:TypeArguments="ue:IReadWriteRangeRef" sap2010:WorkflowViewState.IdRef="CSharpValue`1_17">Excel.Sheet["Danh mục mới"].Range["B2:K" + indexLastRow]</CSharpValue>
                        </InArgument>
                      </ueab:RemoveDuplicatesX.Range>
                    </ueab:RemoveDuplicatesX>
                  </Sequence>
                </ActivityAction>
              </ueab:ExcelApplicationCard.Body>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ueab:ExcelApplicationCard>
          </Sequence>
        </ActivityAction>
      </ueab:ExcelProcessScopeX.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ueab:ExcelProcessScopeX>
    <ui:ExcelApplicationScope Password="{x:Null}" CreateNewFile="False" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="718.4,1797.6" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_5" InstanceCachePeriod="3000" Visible="False" WorkbookPath="Output\\Danh muc VTHH.xlsx">
      <ui:ExcelApplicationScope.Body>
        <ActivityAction x:TypeArguments="ui:WorkbookApplication">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="536,1688" sap2010:WorkflowViewState.IdRef="Sequence_27">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Sequence DisplayName="VLOOKUP THEO MO TA" sap:VirtualizedContainerService.HintSize="473.6,1576" sap2010:WorkflowViewState.IdRef="Sequence_20">
              <Sequence.Variables>
                <Variable x:TypeArguments="sd:DataTable" Name="dtOldGoodsList" />
                <Variable x:TypeArguments="sd:DataTable" Name="dtLookupValue" />
                <Variable x:TypeArguments="sd:DataTable" Name="dtUpdateGoodsList" />
              </Sequence.Variables>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:ExcelReadRange AddHeaders="False" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="411.2,60" sap2010:WorkflowViewState.IdRef="ExcelReadRange_8" Range="A1" SheetName="Danh mục cũ">
                <ui:ExcelReadRange.DataTable>
                  <OutArgument x:TypeArguments="sd:DataTable">
                    <CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_15">dtOldGoodsList</CSharpReference>
                  </OutArgument>
                </ui:ExcelReadRange.DataTable>
              </ui:ExcelReadRange>
              <ui:ExcelReadRange AddHeaders="True" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="411.2,60" sap2010:WorkflowViewState.IdRef="ExcelReadRange_9" Range="B2" SheetName="Danh mục mới">
                <ui:ExcelReadRange.DataTable>
                  <OutArgument x:TypeArguments="sd:DataTable">
                    <CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_16">dtLookupValue</CSharpReference>
                  </OutArgument>
                </ui:ExcelReadRange.DataTable>
              </ui:ExcelReadRange>
              <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DisplayName="For Each Row in Data Table" sap:VirtualizedContainerService.HintSize="411.2,805.6" sap2010:WorkflowViewState.IdRef="ForEachRow_1">
                <ui:ForEachRow.Body>
                  <ActivityAction x:TypeArguments="sd:DataRow">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="sd:DataRow" Name="CurrentRow" />
                    </ActivityAction.Argument>
                    <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="377.6,617.6" sap2010:WorkflowViewState.IdRef="Sequence_21">
                      <Sequence.Variables>
                        <Variable x:TypeArguments="x:String" Name="strLookupValue" />
                        <Variable x:TypeArguments="x:String" Name="strResult" />
                      </Sequence.Variables>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:LookupDataTable LookupColumnName="{x:Null}" LookupDataColumn="{x:Null}" RowIndex="{x:Null}" TargetColumnName="{x:Null}" TargetDataColumn="{x:Null}" DisplayName="Lookup Data Table" sap:VirtualizedContainerService.HintSize="334.4,295.2" sap2010:WorkflowViewState.IdRef="LookupDataTable_3">
                        <ui:LookupDataTable.CellValue>
                          <OutArgument x:TypeArguments="x:String">
                            <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_18">strResult</CSharpReference>
                          </OutArgument>
                        </ui:LookupDataTable.CellValue>
                        <ui:LookupDataTable.DataTable>
                          <InArgument x:TypeArguments="sd:DataTable">
                            <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_20">dtOldGoodsList</CSharpValue>
                          </InArgument>
                        </ui:LookupDataTable.DataTable>
                        <ui:LookupDataTable.LookupColumnIndex>
                          <InArgument x:TypeArguments="s:Nullable(x:Int32)">
                            <Literal x:TypeArguments="s:Nullable(x:Int32)" Value="10" />
                          </InArgument>
                        </ui:LookupDataTable.LookupColumnIndex>
                        <ui:LookupDataTable.LookupValue>
                          <InArgument x:TypeArguments="x:String">
                            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_46">CurrentRow["Mô tả"].ToString()</CSharpValue>
                          </InArgument>
                        </ui:LookupDataTable.LookupValue>
                        <ui:LookupDataTable.TargetColumnIndex>
                          <InArgument x:TypeArguments="s:Nullable(x:Int32)">
                            <Literal x:TypeArguments="s:Nullable(x:Int32)" Value="0" />
                          </InArgument>
                        </ui:LookupDataTable.TargetColumnIndex>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:LookupDataTable>
                      <ui:UpdateRowItem ColumnIndex="{x:Null}" ColumnName="Check" DisplayName="Update Row Item" sap:VirtualizedContainerService.HintSize="334.4,192.8" sap2010:WorkflowViewState.IdRef="UpdateRowItem_1">
                        <ui:UpdateRowItem.Row>
                          <InArgument x:TypeArguments="sd:DataRow">
                            <CSharpValue x:TypeArguments="sd:DataRow" sap2010:WorkflowViewState.IdRef="CSharpValue`1_22">CurrentRow</CSharpValue>
                          </InArgument>
                        </ui:UpdateRowItem.Row>
                        <ui:UpdateRowItem.Value>
                          <InArgument x:TypeArguments="x:Object">
                            <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_23">strResult</CSharpValue>
                          </InArgument>
                        </ui:UpdateRowItem.Value>
                      </ui:UpdateRowItem>
                    </Sequence>
                  </ActivityAction>
                </ui:ForEachRow.Body>
                <ui:ForEachRow.DataTable>
                  <InArgument x:TypeArguments="sd:DataTable">
                    <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_18">dtLookupValue</CSharpValue>
                  </InArgument>
                </ui:ForEachRow.DataTable>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:ForEachRow>
              <ui:ExcelWriteRange AddHeaders="False" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="411.2,88" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_4" SheetName="Danh mục mới" StartingCell="BA3">
                <ui:ExcelWriteRange.DataTable>
                  <InArgument x:TypeArguments="sd:DataTable">
                    <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_24">dtLookupValue.DefaultView.ToTable(false,"Check")</CSharpValue>
                  </InArgument>
                </ui:ExcelWriteRange.DataTable>
              </ui:ExcelWriteRange>
              <ui:FilterDataTable DisplayName="Filter Data Table" FilterRowsMode="Keep" sap:VirtualizedContainerService.HintSize="411.2,162.4" sap2010:WorkflowViewState.IdRef="FilterDataTable_1" SelectColumnsMode="Keep">
                <ui:FilterDataTable.DataTable>
                  <InArgument x:TypeArguments="sd:DataTable">
                    <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_26">dtLookupValue</CSharpValue>
                  </InArgument>
                </ui:FilterDataTable.DataTable>
                <ui:FilterDataTable.Filters>
                  <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                    <ui:FilterOperationArgument Operand="{x:Null}" BooleanOperator="And" Operator="EMPTY">
                      <ui:FilterOperationArgument.Column>
                        <InArgument x:TypeArguments="x:Int32">
                          <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_25">51</CSharpValue>
                        </InArgument>
                      </ui:FilterOperationArgument.Column>
                    </ui:FilterOperationArgument>
                  </scg:List>
                </ui:FilterDataTable.Filters>
                <ui:FilterDataTable.OutputDataTable>
                  <OutArgument x:TypeArguments="sd:DataTable">
                    <CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_19">dtUpdateGoodsList</CSharpReference>
                  </OutArgument>
                </ui:FilterDataTable.OutputDataTable>
                <ui:FilterDataTable.SelectColumns>
                  <scg:List x:TypeArguments="InArgument" Capacity="4">
                    <x:Null />
                  </scg:List>
                </ui:FilterDataTable.SelectColumns>
              </ui:FilterDataTable>
              <ui:ExcelWriteRange AddHeaders="False" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="411.2,88" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_5" SheetName="Danh mục cập nhật" StartingCell="B3">
                <ui:ExcelWriteRange.DataTable>
                  <InArgument x:TypeArguments="sd:DataTable">
                    <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_27">dtUpdateGoodsList.DefaultView.ToTable(false,"Tên hàng (*)")</CSharpValue>
                  </InArgument>
                </ui:ExcelWriteRange.DataTable>
              </ui:ExcelWriteRange>
            </Sequence>
          </Sequence>
        </ActivityAction>
      </ui:ExcelApplicationScope.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:ExcelApplicationScope>
    <Sequence DisplayName="THEM DON VI VAO SHEET CAP NHAT" sap:VirtualizedContainerService.HintSize="718.4,2467.2" sap2010:WorkflowViewState.IdRef="Sequence_28">
      <Sequence.Variables>
        <Variable x:TypeArguments="sd:DataTable" Name="dtMisaVsign" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:ForEachFileX DisplayName="For Each File in Folder" Folder="Input" sap:VirtualizedContainerService.HintSize="656,929.6" sap2010:WorkflowViewState.IdRef="ForEachFileX_1" IncludeSubDirectories="False" OrderBy="NameAscFirst" SkipFolderWithoutPermission="False">
        <ui:ForEachFileX.Body>
          <ActivityAction x:TypeArguments="si:FileInfo, x:Int32">
            <ActivityAction.Argument1>
              <DelegateInArgument x:TypeArguments="si:FileInfo" Name="CurrentFile" />
            </ActivityAction.Argument1>
            <ActivityAction.Argument2>
              <DelegateInArgument x:TypeArguments="x:Int32" Name="CurrentIndex" />
            </ActivityAction.Argument2>
            <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="622.4,666.4" sap2010:WorkflowViewState.IdRef="Sequence_32">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If sap:VirtualizedContainerService.HintSize="560,554.4" sap2010:WorkflowViewState.IdRef="If_1">
                <If.Condition>
                  <InArgument x:TypeArguments="x:Boolean">
                    <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_45" xml:space="preserve">CurrentFile.Name.Contains("Mua_hang_Vsign_" +in_taxCode+"_T"+in_downloadMonthBegin +"-T" +  in_downloadMonthEnd)</CSharpValue>
                  </InArgument>
                </If.Condition>
                <If.Then>
                  <Sequence sap:VirtualizedContainerService.HintSize="526.4,371.2" sap2010:WorkflowViewState.IdRef="Sequence_30">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="483.2,281.6" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_7" InstanceCachePeriod="3000" Visible="False">
                      <ui:ExcelApplicationScope.Body>
                        <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                          </ActivityAction.Argument>
                          <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="449.6,172" sap2010:WorkflowViewState.IdRef="Sequence_29">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:ExcelReadRange AddHeaders="True" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="387.2,60" sap2010:WorkflowViewState.IdRef="ExcelReadRange_10" Range="S1" SheetName="misa">
                              <ui:ExcelReadRange.DataTable>
                                <OutArgument x:TypeArguments="sd:DataTable">
                                  <CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_20">dtMisaVsign</CSharpReference>
                                </OutArgument>
                              </ui:ExcelReadRange.DataTable>
                            </ui:ExcelReadRange>
                          </Sequence>
                        </ActivityAction>
                      </ui:ExcelApplicationScope.Body>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:ExcelApplicationScope.WorkbookPath>
                        <InArgument x:TypeArguments="x:String">
                          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_31">CurrentFile.FullName</CSharpValue>
                        </InArgument>
                      </ui:ExcelApplicationScope.WorkbookPath>
                    </ui:ExcelApplicationScope>
                  </Sequence>
                </If.Then>
                <If.Else>
                  <Sequence sap2010:WorkflowViewState.IdRef="Sequence_31" />
                </If.Else>
              </If>
            </Sequence>
          </ActivityAction>
        </ui:ForEachFileX.Body>
      </ui:ForEachFileX>
      <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="656,1385.6" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_8" InstanceCachePeriod="3000" Visible="False" WorkbookPath="Output\\Danh muc VTHH.xlsx">
        <ui:ExcelApplicationScope.Body>
          <ActivityAction x:TypeArguments="ui:WorkbookApplication">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="473.6,1276" sap2010:WorkflowViewState.IdRef="Sequence_33">
              <Sequence.Variables>
                <Variable x:TypeArguments="sd:DataTable" Name="dtLookupValue" />
              </Sequence.Variables>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:ExcelReadRange AddHeaders="True" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="411.2,60" sap2010:WorkflowViewState.IdRef="ExcelReadRange_11" Range="A2" SheetName="Danh mục cập nhật">
                <ui:ExcelReadRange.DataTable>
                  <OutArgument x:TypeArguments="sd:DataTable">
                    <CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_21">dtLookupValue</CSharpReference>
                  </OutArgument>
                </ui:ExcelReadRange.DataTable>
              </ui:ExcelReadRange>
              <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DisplayName="For Each Row in Data Table" sap:VirtualizedContainerService.HintSize="411.2,936" sap2010:WorkflowViewState.IdRef="ForEachRow_2">
                <ui:ForEachRow.Body>
                  <ActivityAction x:TypeArguments="sd:DataRow">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="sd:DataRow" Name="CurrentRow" />
                    </ActivityAction.Argument>
                    <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="377.6,748" sap2010:WorkflowViewState.IdRef="Sequence_34">
                      <Sequence.Variables>
                        <Variable x:TypeArguments="x:String" Name="strLookupValue" />
                        <Variable x:TypeArguments="x:String" Name="strResult" />
                      </Sequence.Variables>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:LookupDataTable LookupColumnName="{x:Null}" LookupDataColumn="{x:Null}" RowIndex="{x:Null}" TargetColumnName="{x:Null}" TargetDataColumn="{x:Null}" DisplayName="Lookup Data Table" sap:VirtualizedContainerService.HintSize="334.4,295.2" sap2010:WorkflowViewState.IdRef="LookupDataTable_2">
                        <ui:LookupDataTable.CellValue>
                          <OutArgument x:TypeArguments="x:String">
                            <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_23">strResult</CSharpReference>
                          </OutArgument>
                        </ui:LookupDataTable.CellValue>
                        <ui:LookupDataTable.DataTable>
                          <InArgument x:TypeArguments="sd:DataTable">
                            <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_34">dtMisaVsign</CSharpValue>
                          </InArgument>
                        </ui:LookupDataTable.DataTable>
                        <ui:LookupDataTable.LookupColumnIndex>
                          <InArgument x:TypeArguments="s:Nullable(x:Int32)">
                            <Literal x:TypeArguments="s:Nullable(x:Int32)" Value="0" />
                          </InArgument>
                        </ui:LookupDataTable.LookupColumnIndex>
                        <ui:LookupDataTable.LookupValue>
                          <InArgument x:TypeArguments="x:String">
                            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_47">CurrentRow["Tên hàng (*)"].ToString()</CSharpValue>
                          </InArgument>
                        </ui:LookupDataTable.LookupValue>
                        <ui:LookupDataTable.TargetColumnIndex>
                          <InArgument x:TypeArguments="s:Nullable(x:Int32)">
                            <Literal x:TypeArguments="s:Nullable(x:Int32)" Value="5" />
                          </InArgument>
                        </ui:LookupDataTable.TargetColumnIndex>
                      </ui:LookupDataTable>
                      <ui:UpdateRowItem ColumnName="{x:Null}" ColumnIndex="3" DisplayName="Update Row Item" sap:VirtualizedContainerService.HintSize="334.4,192.8" sap2010:WorkflowViewState.IdRef="UpdateRowItem_2">
                        <ui:UpdateRowItem.Row>
                          <InArgument x:TypeArguments="sd:DataRow">
                            <CSharpValue x:TypeArguments="sd:DataRow" sap2010:WorkflowViewState.IdRef="CSharpValue`1_36">CurrentRow</CSharpValue>
                          </InArgument>
                        </ui:UpdateRowItem.Row>
                        <ui:UpdateRowItem.Value>
                          <InArgument x:TypeArguments="x:Object">
                            <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_37">strResult</CSharpValue>
                          </InArgument>
                        </ui:UpdateRowItem.Value>
                      </ui:UpdateRowItem>
                      <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="334.4,90.4" sap2010:WorkflowViewState.IdRef="WriteLine_2">
                        <InArgument x:TypeArguments="x:String">
                          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_39">strResult</CSharpValue>
                        </InArgument>
                      </WriteLine>
                    </Sequence>
                  </ActivityAction>
                </ui:ForEachRow.Body>
                <ui:ForEachRow.DataTable>
                  <InArgument x:TypeArguments="sd:DataTable">
                    <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_32">dtLookupValue</CSharpValue>
                  </InArgument>
                </ui:ForEachRow.DataTable>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:ForEachRow>
              <ui:ExcelWriteRange AddHeaders="False" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="411.2,88" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_6" SheetName="Danh mục cập nhật" StartingCell="D3">
                <ui:ExcelWriteRange.DataTable>
                  <InArgument x:TypeArguments="sd:DataTable">
                    <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_42">dtLookupValue.DefaultView.ToTable(false, dtLookupValue.Columns[3].ColumnName);</CSharpValue>
                  </InArgument>
                </ui:ExcelWriteRange.DataTable>
              </ui:ExcelWriteRange>
            </Sequence>
          </ActivityAction>
        </ui:ExcelApplicationScope.Body>
      </ui:ExcelApplicationScope>
    </Sequence>
  </Sequence>
</Activity>